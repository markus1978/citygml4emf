/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package net.opengis.gml.provider;

import java.util.ArrayList;
import java.util.Collection;

import net.opengis.gml.util.GmlAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class GmlItemProviderAdapterFactory extends GmlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GmlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbsoluteExternalPositionalAccuracyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsoluteExternalPositionalAccuracyTypeItemProvider absoluteExternalPositionalAccuracyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbsoluteExternalPositionalAccuracyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsoluteExternalPositionalAccuracyTypeAdapter() {
		if (absoluteExternalPositionalAccuracyTypeItemProvider == null) {
			absoluteExternalPositionalAccuracyTypeItemProvider = new AbsoluteExternalPositionalAccuracyTypeItemProvider(this);
		}

		return absoluteExternalPositionalAccuracyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbstractGeneralOperationParameterRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractGeneralOperationParameterRefTypeItemProvider abstractGeneralOperationParameterRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbstractGeneralOperationParameterRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractGeneralOperationParameterRefTypeAdapter() {
		if (abstractGeneralOperationParameterRefTypeItemProvider == null) {
			abstractGeneralOperationParameterRefTypeItemProvider = new AbstractGeneralOperationParameterRefTypeItemProvider(this);
		}

		return abstractGeneralOperationParameterRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbstractGriddedSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractGriddedSurfaceTypeItemProvider abstractGriddedSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbstractGriddedSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractGriddedSurfaceTypeAdapter() {
		if (abstractGriddedSurfaceTypeItemProvider == null) {
			abstractGriddedSurfaceTypeItemProvider = new AbstractGriddedSurfaceTypeItemProvider(this);
		}

		return abstractGriddedSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbstractParametricCurveSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractParametricCurveSurfaceTypeItemProvider abstractParametricCurveSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbstractParametricCurveSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractParametricCurveSurfaceTypeAdapter() {
		if (abstractParametricCurveSurfaceTypeItemProvider == null) {
			abstractParametricCurveSurfaceTypeItemProvider = new AbstractParametricCurveSurfaceTypeItemProvider(this);
		}

		return abstractParametricCurveSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbstractRingPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractRingPropertyTypeItemProvider abstractRingPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbstractRingPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractRingPropertyTypeAdapter() {
		if (abstractRingPropertyTypeItemProvider == null) {
			abstractRingPropertyTypeItemProvider = new AbstractRingPropertyTypeItemProvider(this);
		}

		return abstractRingPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbstractSolidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractSolidTypeItemProvider abstractSolidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbstractSolidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractSolidTypeAdapter() {
		if (abstractSolidTypeItemProvider == null) {
			abstractSolidTypeItemProvider = new AbstractSolidTypeItemProvider(this);
		}

		return abstractSolidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AbstractSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractSurfaceTypeItemProvider abstractSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AbstractSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractSurfaceTypeAdapter() {
		if (abstractSurfaceTypeItemProvider == null) {
			abstractSurfaceTypeItemProvider = new AbstractSurfaceTypeItemProvider(this);
		}

		return abstractSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AffinePlacementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AffinePlacementTypeItemProvider affinePlacementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AffinePlacementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAffinePlacementTypeAdapter() {
		if (affinePlacementTypeItemProvider == null) {
			affinePlacementTypeItemProvider = new AffinePlacementTypeItemProvider(this);
		}

		return affinePlacementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AngleChoiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleChoiceTypeItemProvider angleChoiceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AngleChoiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleChoiceTypeAdapter() {
		if (angleChoiceTypeItemProvider == null) {
			angleChoiceTypeItemProvider = new AngleChoiceTypeItemProvider(this);
		}

		return angleChoiceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AngleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleTypeItemProvider angleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AngleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleTypeAdapter() {
		if (angleTypeItemProvider == null) {
			angleTypeItemProvider = new AngleTypeItemProvider(this);
		}

		return angleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArcByBulgeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArcByBulgeTypeItemProvider arcByBulgeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArcByBulgeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArcByBulgeTypeAdapter() {
		if (arcByBulgeTypeItemProvider == null) {
			arcByBulgeTypeItemProvider = new ArcByBulgeTypeItemProvider(this);
		}

		return arcByBulgeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArcByCenterPointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArcByCenterPointTypeItemProvider arcByCenterPointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArcByCenterPointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArcByCenterPointTypeAdapter() {
		if (arcByCenterPointTypeItemProvider == null) {
			arcByCenterPointTypeItemProvider = new ArcByCenterPointTypeItemProvider(this);
		}

		return arcByCenterPointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArcStringByBulgeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArcStringByBulgeTypeItemProvider arcStringByBulgeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArcStringByBulgeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArcStringByBulgeTypeAdapter() {
		if (arcStringByBulgeTypeItemProvider == null) {
			arcStringByBulgeTypeItemProvider = new ArcStringByBulgeTypeItemProvider(this);
		}

		return arcStringByBulgeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArcStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArcStringTypeItemProvider arcStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArcStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArcStringTypeAdapter() {
		if (arcStringTypeItemProvider == null) {
			arcStringTypeItemProvider = new ArcStringTypeItemProvider(this);
		}

		return arcStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArcType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArcTypeItemProvider arcTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArcType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArcTypeAdapter() {
		if (arcTypeItemProvider == null) {
			arcTypeItemProvider = new ArcTypeItemProvider(this);
		}

		return arcTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AreaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AreaTypeItemProvider areaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AreaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAreaTypeAdapter() {
		if (areaTypeItemProvider == null) {
			areaTypeItemProvider = new AreaTypeItemProvider(this);
		}

		return areaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArrayAssociationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayAssociationTypeItemProvider arrayAssociationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArrayAssociationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayAssociationTypeAdapter() {
		if (arrayAssociationTypeItemProvider == null) {
			arrayAssociationTypeItemProvider = new ArrayAssociationTypeItemProvider(this);
		}

		return arrayAssociationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ArrayType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayTypeItemProvider arrayTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ArrayType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayTypeAdapter() {
		if (arrayTypeItemProvider == null) {
			arrayTypeItemProvider = new ArrayTypeItemProvider(this);
		}

		return arrayTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.AssociationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationTypeItemProvider associationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.AssociationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationTypeAdapter() {
		if (associationTypeItemProvider == null) {
			associationTypeItemProvider = new AssociationTypeItemProvider(this);
		}

		return associationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BagType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BagTypeItemProvider bagTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BagType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBagTypeAdapter() {
		if (bagTypeItemProvider == null) {
			bagTypeItemProvider = new BagTypeItemProvider(this);
		}

		return bagTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BaseStyleDescriptorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseStyleDescriptorTypeItemProvider baseStyleDescriptorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BaseStyleDescriptorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseStyleDescriptorTypeAdapter() {
		if (baseStyleDescriptorTypeItemProvider == null) {
			baseStyleDescriptorTypeItemProvider = new BaseStyleDescriptorTypeItemProvider(this);
		}

		return baseStyleDescriptorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BaseUnitType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseUnitTypeItemProvider baseUnitTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BaseUnitType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseUnitTypeAdapter() {
		if (baseUnitTypeItemProvider == null) {
			baseUnitTypeItemProvider = new BaseUnitTypeItemProvider(this);
		}

		return baseUnitTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BezierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BezierTypeItemProvider bezierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BezierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBezierTypeAdapter() {
		if (bezierTypeItemProvider == null) {
			bezierTypeItemProvider = new BezierTypeItemProvider(this);
		}

		return bezierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BooleanPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanPropertyTypeItemProvider booleanPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BooleanPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanPropertyTypeAdapter() {
		if (booleanPropertyTypeItemProvider == null) {
			booleanPropertyTypeItemProvider = new BooleanPropertyTypeItemProvider(this);
		}

		return booleanPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BoundingShapeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundingShapeTypeItemProvider boundingShapeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BoundingShapeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundingShapeTypeAdapter() {
		if (boundingShapeTypeItemProvider == null) {
			boundingShapeTypeItemProvider = new BoundingShapeTypeItemProvider(this);
		}

		return boundingShapeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.BSplineType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BSplineTypeItemProvider bSplineTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.BSplineType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBSplineTypeAdapter() {
		if (bSplineTypeItemProvider == null) {
			bSplineTypeItemProvider = new BSplineTypeItemProvider(this);
		}

		return bSplineTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CartesianCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CartesianCSRefTypeItemProvider cartesianCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CartesianCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCartesianCSRefTypeAdapter() {
		if (cartesianCSRefTypeItemProvider == null) {
			cartesianCSRefTypeItemProvider = new CartesianCSRefTypeItemProvider(this);
		}

		return cartesianCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CartesianCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CartesianCSTypeItemProvider cartesianCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CartesianCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCartesianCSTypeAdapter() {
		if (cartesianCSTypeItemProvider == null) {
			cartesianCSTypeItemProvider = new CartesianCSTypeItemProvider(this);
		}

		return cartesianCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CategoryExtentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryExtentTypeItemProvider categoryExtentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CategoryExtentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryExtentTypeAdapter() {
		if (categoryExtentTypeItemProvider == null) {
			categoryExtentTypeItemProvider = new CategoryExtentTypeItemProvider(this);
		}

		return categoryExtentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CategoryPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryPropertyTypeItemProvider categoryPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CategoryPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryPropertyTypeAdapter() {
		if (categoryPropertyTypeItemProvider == null) {
			categoryPropertyTypeItemProvider = new CategoryPropertyTypeItemProvider(this);
		}

		return categoryPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CircleByCenterPointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CircleByCenterPointTypeItemProvider circleByCenterPointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CircleByCenterPointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCircleByCenterPointTypeAdapter() {
		if (circleByCenterPointTypeItemProvider == null) {
			circleByCenterPointTypeItemProvider = new CircleByCenterPointTypeItemProvider(this);
		}

		return circleByCenterPointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CircleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CircleTypeItemProvider circleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CircleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCircleTypeAdapter() {
		if (circleTypeItemProvider == null) {
			circleTypeItemProvider = new CircleTypeItemProvider(this);
		}

		return circleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ClothoidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClothoidTypeItemProvider clothoidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ClothoidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClothoidTypeAdapter() {
		if (clothoidTypeItemProvider == null) {
			clothoidTypeItemProvider = new ClothoidTypeItemProvider(this);
		}

		return clothoidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CodeListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CodeListTypeItemProvider codeListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CodeListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCodeListTypeAdapter() {
		if (codeListTypeItemProvider == null) {
			codeListTypeItemProvider = new CodeListTypeItemProvider(this);
		}

		return codeListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CodeOrNullListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CodeOrNullListTypeItemProvider codeOrNullListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CodeOrNullListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCodeOrNullListTypeAdapter() {
		if (codeOrNullListTypeItemProvider == null) {
			codeOrNullListTypeItemProvider = new CodeOrNullListTypeItemProvider(this);
		}

		return codeOrNullListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CodeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CodeTypeItemProvider codeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CodeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCodeTypeAdapter() {
		if (codeTypeItemProvider == null) {
			codeTypeItemProvider = new CodeTypeItemProvider(this);
		}

		return codeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeCurvePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeCurvePropertyTypeItemProvider compositeCurvePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeCurvePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeCurvePropertyTypeAdapter() {
		if (compositeCurvePropertyTypeItemProvider == null) {
			compositeCurvePropertyTypeItemProvider = new CompositeCurvePropertyTypeItemProvider(this);
		}

		return compositeCurvePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeCurveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeCurveTypeItemProvider compositeCurveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeCurveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeCurveTypeAdapter() {
		if (compositeCurveTypeItemProvider == null) {
			compositeCurveTypeItemProvider = new CompositeCurveTypeItemProvider(this);
		}

		return compositeCurveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeSolidPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeSolidPropertyTypeItemProvider compositeSolidPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeSolidPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeSolidPropertyTypeAdapter() {
		if (compositeSolidPropertyTypeItemProvider == null) {
			compositeSolidPropertyTypeItemProvider = new CompositeSolidPropertyTypeItemProvider(this);
		}

		return compositeSolidPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeSolidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeSolidTypeItemProvider compositeSolidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeSolidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeSolidTypeAdapter() {
		if (compositeSolidTypeItemProvider == null) {
			compositeSolidTypeItemProvider = new CompositeSolidTypeItemProvider(this);
		}

		return compositeSolidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeSurfacePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeSurfacePropertyTypeItemProvider compositeSurfacePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeSurfacePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeSurfacePropertyTypeAdapter() {
		if (compositeSurfacePropertyTypeItemProvider == null) {
			compositeSurfacePropertyTypeItemProvider = new CompositeSurfacePropertyTypeItemProvider(this);
		}

		return compositeSurfacePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeSurfaceTypeItemProvider compositeSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeSurfaceTypeAdapter() {
		if (compositeSurfaceTypeItemProvider == null) {
			compositeSurfaceTypeItemProvider = new CompositeSurfaceTypeItemProvider(this);
		}

		return compositeSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompositeValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeValueTypeItemProvider compositeValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompositeValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeValueTypeAdapter() {
		if (compositeValueTypeItemProvider == null) {
			compositeValueTypeItemProvider = new CompositeValueTypeItemProvider(this);
		}

		return compositeValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompoundCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompoundCRSRefTypeItemProvider compoundCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompoundCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompoundCRSRefTypeAdapter() {
		if (compoundCRSRefTypeItemProvider == null) {
			compoundCRSRefTypeItemProvider = new CompoundCRSRefTypeItemProvider(this);
		}

		return compoundCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CompoundCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompoundCRSTypeItemProvider compoundCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CompoundCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompoundCRSTypeAdapter() {
		if (compoundCRSTypeItemProvider == null) {
			compoundCRSTypeItemProvider = new CompoundCRSTypeItemProvider(this);
		}

		return compoundCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConcatenatedOperationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcatenatedOperationRefTypeItemProvider concatenatedOperationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConcatenatedOperationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcatenatedOperationRefTypeAdapter() {
		if (concatenatedOperationRefTypeItemProvider == null) {
			concatenatedOperationRefTypeItemProvider = new ConcatenatedOperationRefTypeItemProvider(this);
		}

		return concatenatedOperationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConcatenatedOperationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcatenatedOperationTypeItemProvider concatenatedOperationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConcatenatedOperationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcatenatedOperationTypeAdapter() {
		if (concatenatedOperationTypeItemProvider == null) {
			concatenatedOperationTypeItemProvider = new ConcatenatedOperationTypeItemProvider(this);
		}

		return concatenatedOperationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConeTypeItemProvider coneTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConeTypeAdapter() {
		if (coneTypeItemProvider == null) {
			coneTypeItemProvider = new ConeTypeItemProvider(this);
		}

		return coneTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ContainerPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerPropertyTypeItemProvider containerPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ContainerPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerPropertyTypeAdapter() {
		if (containerPropertyTypeItemProvider == null) {
			containerPropertyTypeItemProvider = new ContainerPropertyTypeItemProvider(this);
		}

		return containerPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ControlPointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ControlPointTypeItemProvider controlPointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ControlPointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createControlPointTypeAdapter() {
		if (controlPointTypeItemProvider == null) {
			controlPointTypeItemProvider = new ControlPointTypeItemProvider(this);
		}

		return controlPointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConventionalUnitType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConventionalUnitTypeItemProvider conventionalUnitTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConventionalUnitType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConventionalUnitTypeAdapter() {
		if (conventionalUnitTypeItemProvider == null) {
			conventionalUnitTypeItemProvider = new ConventionalUnitTypeItemProvider(this);
		}

		return conventionalUnitTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConversionRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConversionRefTypeItemProvider conversionRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConversionRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConversionRefTypeAdapter() {
		if (conversionRefTypeItemProvider == null) {
			conversionRefTypeItemProvider = new ConversionRefTypeItemProvider(this);
		}

		return conversionRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConversionToPreferredUnitType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConversionToPreferredUnitTypeItemProvider conversionToPreferredUnitTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConversionToPreferredUnitType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConversionToPreferredUnitTypeAdapter() {
		if (conversionToPreferredUnitTypeItemProvider == null) {
			conversionToPreferredUnitTypeItemProvider = new ConversionToPreferredUnitTypeItemProvider(this);
		}

		return conversionToPreferredUnitTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ConversionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConversionTypeItemProvider conversionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ConversionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConversionTypeAdapter() {
		if (conversionTypeItemProvider == null) {
			conversionTypeItemProvider = new ConversionTypeItemProvider(this);
		}

		return conversionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordinateOperationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordinateOperationRefTypeItemProvider coordinateOperationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordinateOperationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordinateOperationRefTypeAdapter() {
		if (coordinateOperationRefTypeItemProvider == null) {
			coordinateOperationRefTypeItemProvider = new CoordinateOperationRefTypeItemProvider(this);
		}

		return coordinateOperationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordinateReferenceSystemRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordinateReferenceSystemRefTypeItemProvider coordinateReferenceSystemRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordinateReferenceSystemRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordinateReferenceSystemRefTypeAdapter() {
		if (coordinateReferenceSystemRefTypeItemProvider == null) {
			coordinateReferenceSystemRefTypeItemProvider = new CoordinateReferenceSystemRefTypeItemProvider(this);
		}

		return coordinateReferenceSystemRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordinatesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordinatesTypeItemProvider coordinatesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordinatesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordinatesTypeAdapter() {
		if (coordinatesTypeItemProvider == null) {
			coordinatesTypeItemProvider = new CoordinatesTypeItemProvider(this);
		}

		return coordinatesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordinateSystemAxisRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordinateSystemAxisRefTypeItemProvider coordinateSystemAxisRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordinateSystemAxisRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordinateSystemAxisRefTypeAdapter() {
		if (coordinateSystemAxisRefTypeItemProvider == null) {
			coordinateSystemAxisRefTypeItemProvider = new CoordinateSystemAxisRefTypeItemProvider(this);
		}

		return coordinateSystemAxisRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordinateSystemAxisType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordinateSystemAxisTypeItemProvider coordinateSystemAxisTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordinateSystemAxisType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordinateSystemAxisTypeAdapter() {
		if (coordinateSystemAxisTypeItemProvider == null) {
			coordinateSystemAxisTypeItemProvider = new CoordinateSystemAxisTypeItemProvider(this);
		}

		return coordinateSystemAxisTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordinateSystemRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordinateSystemRefTypeItemProvider coordinateSystemRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordinateSystemRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordinateSystemRefTypeAdapter() {
		if (coordinateSystemRefTypeItemProvider == null) {
			coordinateSystemRefTypeItemProvider = new CoordinateSystemRefTypeItemProvider(this);
		}

		return coordinateSystemRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoordType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoordTypeItemProvider coordTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoordType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoordTypeAdapter() {
		if (coordTypeItemProvider == null) {
			coordTypeItemProvider = new CoordTypeItemProvider(this);
		}

		return coordTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CountPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CountPropertyTypeItemProvider countPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CountPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCountPropertyTypeAdapter() {
		if (countPropertyTypeItemProvider == null) {
			countPropertyTypeItemProvider = new CountPropertyTypeItemProvider(this);
		}

		return countPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CovarianceElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CovarianceElementTypeItemProvider covarianceElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CovarianceElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCovarianceElementTypeAdapter() {
		if (covarianceElementTypeItemProvider == null) {
			covarianceElementTypeItemProvider = new CovarianceElementTypeItemProvider(this);
		}

		return covarianceElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CovarianceMatrixType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CovarianceMatrixTypeItemProvider covarianceMatrixTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CovarianceMatrixType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCovarianceMatrixTypeAdapter() {
		if (covarianceMatrixTypeItemProvider == null) {
			covarianceMatrixTypeItemProvider = new CovarianceMatrixTypeItemProvider(this);
		}

		return covarianceMatrixTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CoverageFunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoverageFunctionTypeItemProvider coverageFunctionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CoverageFunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoverageFunctionTypeAdapter() {
		if (coverageFunctionTypeItemProvider == null) {
			coverageFunctionTypeItemProvider = new CoverageFunctionTypeItemProvider(this);
		}

		return coverageFunctionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CRSRefTypeItemProvider crsRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCRSRefTypeAdapter() {
		if (crsRefTypeItemProvider == null) {
			crsRefTypeItemProvider = new CRSRefTypeItemProvider(this);
		}

		return crsRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CubicSplineType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CubicSplineTypeItemProvider cubicSplineTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CubicSplineType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCubicSplineTypeAdapter() {
		if (cubicSplineTypeItemProvider == null) {
			cubicSplineTypeItemProvider = new CubicSplineTypeItemProvider(this);
		}

		return cubicSplineTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CurveArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CurveArrayPropertyTypeItemProvider curveArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CurveArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCurveArrayPropertyTypeAdapter() {
		if (curveArrayPropertyTypeItemProvider == null) {
			curveArrayPropertyTypeItemProvider = new CurveArrayPropertyTypeItemProvider(this);
		}

		return curveArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CurvePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CurvePropertyTypeItemProvider curvePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CurvePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCurvePropertyTypeAdapter() {
		if (curvePropertyTypeItemProvider == null) {
			curvePropertyTypeItemProvider = new CurvePropertyTypeItemProvider(this);
		}

		return curvePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CurveSegmentArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CurveSegmentArrayPropertyTypeItemProvider curveSegmentArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CurveSegmentArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCurveSegmentArrayPropertyTypeAdapter() {
		if (curveSegmentArrayPropertyTypeItemProvider == null) {
			curveSegmentArrayPropertyTypeItemProvider = new CurveSegmentArrayPropertyTypeItemProvider(this);
		}

		return curveSegmentArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CurveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CurveTypeItemProvider curveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CurveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCurveTypeAdapter() {
		if (curveTypeItemProvider == null) {
			curveTypeItemProvider = new CurveTypeItemProvider(this);
		}

		return curveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CylinderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CylinderTypeItemProvider cylinderTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CylinderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCylinderTypeAdapter() {
		if (cylinderTypeItemProvider == null) {
			cylinderTypeItemProvider = new CylinderTypeItemProvider(this);
		}

		return cylinderTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CylindricalCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CylindricalCSRefTypeItemProvider cylindricalCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CylindricalCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCylindricalCSRefTypeAdapter() {
		if (cylindricalCSRefTypeItemProvider == null) {
			cylindricalCSRefTypeItemProvider = new CylindricalCSRefTypeItemProvider(this);
		}

		return cylindricalCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.CylindricalCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CylindricalCSTypeItemProvider cylindricalCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.CylindricalCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCylindricalCSTypeAdapter() {
		if (cylindricalCSTypeItemProvider == null) {
			cylindricalCSTypeItemProvider = new CylindricalCSTypeItemProvider(this);
		}

		return cylindricalCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DataBlockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataBlockTypeItemProvider dataBlockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DataBlockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataBlockTypeAdapter() {
		if (dataBlockTypeItemProvider == null) {
			dataBlockTypeItemProvider = new DataBlockTypeItemProvider(this);
		}

		return dataBlockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DatumRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DatumRefTypeItemProvider datumRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DatumRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDatumRefTypeAdapter() {
		if (datumRefTypeItemProvider == null) {
			datumRefTypeItemProvider = new DatumRefTypeItemProvider(this);
		}

		return datumRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DefaultStylePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultStylePropertyTypeItemProvider defaultStylePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DefaultStylePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultStylePropertyTypeAdapter() {
		if (defaultStylePropertyTypeItemProvider == null) {
			defaultStylePropertyTypeItemProvider = new DefaultStylePropertyTypeItemProvider(this);
		}

		return defaultStylePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DefinitionProxyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionProxyTypeItemProvider definitionProxyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DefinitionProxyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionProxyTypeAdapter() {
		if (definitionProxyTypeItemProvider == null) {
			definitionProxyTypeItemProvider = new DefinitionProxyTypeItemProvider(this);
		}

		return definitionProxyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionTypeItemProvider definitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionTypeAdapter() {
		if (definitionTypeItemProvider == null) {
			definitionTypeItemProvider = new DefinitionTypeItemProvider(this);
		}

		return definitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DegreesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DegreesTypeItemProvider degreesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DegreesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDegreesTypeAdapter() {
		if (degreesTypeItemProvider == null) {
			degreesTypeItemProvider = new DegreesTypeItemProvider(this);
		}

		return degreesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DerivationUnitTermType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivationUnitTermTypeItemProvider derivationUnitTermTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DerivationUnitTermType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivationUnitTermTypeAdapter() {
		if (derivationUnitTermTypeItemProvider == null) {
			derivationUnitTermTypeItemProvider = new DerivationUnitTermTypeItemProvider(this);
		}

		return derivationUnitTermTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DerivedCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedCRSRefTypeItemProvider derivedCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DerivedCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedCRSRefTypeAdapter() {
		if (derivedCRSRefTypeItemProvider == null) {
			derivedCRSRefTypeItemProvider = new DerivedCRSRefTypeItemProvider(this);
		}

		return derivedCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DerivedCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedCRSTypeItemProvider derivedCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DerivedCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedCRSTypeAdapter() {
		if (derivedCRSTypeItemProvider == null) {
			derivedCRSTypeItemProvider = new DerivedCRSTypeItemProvider(this);
		}

		return derivedCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DerivedCRSTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedCRSTypeTypeItemProvider derivedCRSTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DerivedCRSTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedCRSTypeTypeAdapter() {
		if (derivedCRSTypeTypeItemProvider == null) {
			derivedCRSTypeTypeItemProvider = new DerivedCRSTypeTypeItemProvider(this);
		}

		return derivedCRSTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DerivedUnitType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedUnitTypeItemProvider derivedUnitTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DerivedUnitType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedUnitTypeAdapter() {
		if (derivedUnitTypeItemProvider == null) {
			derivedUnitTypeItemProvider = new DerivedUnitTypeItemProvider(this);
		}

		return derivedUnitTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DictionaryEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DictionaryEntryTypeItemProvider dictionaryEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DictionaryEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDictionaryEntryTypeAdapter() {
		if (dictionaryEntryTypeItemProvider == null) {
			dictionaryEntryTypeItemProvider = new DictionaryEntryTypeItemProvider(this);
		}

		return dictionaryEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DictionaryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DictionaryTypeItemProvider dictionaryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DictionaryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDictionaryTypeAdapter() {
		if (dictionaryTypeItemProvider == null) {
			dictionaryTypeItemProvider = new DictionaryTypeItemProvider(this);
		}

		return dictionaryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectedEdgePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectedEdgePropertyTypeItemProvider directedEdgePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectedEdgePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectedEdgePropertyTypeAdapter() {
		if (directedEdgePropertyTypeItemProvider == null) {
			directedEdgePropertyTypeItemProvider = new DirectedEdgePropertyTypeItemProvider(this);
		}

		return directedEdgePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectedFacePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectedFacePropertyTypeItemProvider directedFacePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectedFacePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectedFacePropertyTypeAdapter() {
		if (directedFacePropertyTypeItemProvider == null) {
			directedFacePropertyTypeItemProvider = new DirectedFacePropertyTypeItemProvider(this);
		}

		return directedFacePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectedNodePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectedNodePropertyTypeItemProvider directedNodePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectedNodePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectedNodePropertyTypeAdapter() {
		if (directedNodePropertyTypeItemProvider == null) {
			directedNodePropertyTypeItemProvider = new DirectedNodePropertyTypeItemProvider(this);
		}

		return directedNodePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectedObservationAtDistanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectedObservationAtDistanceTypeItemProvider directedObservationAtDistanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectedObservationAtDistanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectedObservationAtDistanceTypeAdapter() {
		if (directedObservationAtDistanceTypeItemProvider == null) {
			directedObservationAtDistanceTypeItemProvider = new DirectedObservationAtDistanceTypeItemProvider(this);
		}

		return directedObservationAtDistanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectedObservationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectedObservationTypeItemProvider directedObservationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectedObservationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectedObservationTypeAdapter() {
		if (directedObservationTypeItemProvider == null) {
			directedObservationTypeItemProvider = new DirectedObservationTypeItemProvider(this);
		}

		return directedObservationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectedTopoSolidPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectedTopoSolidPropertyTypeItemProvider directedTopoSolidPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectedTopoSolidPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectedTopoSolidPropertyTypeAdapter() {
		if (directedTopoSolidPropertyTypeItemProvider == null) {
			directedTopoSolidPropertyTypeItemProvider = new DirectedTopoSolidPropertyTypeItemProvider(this);
		}

		return directedTopoSolidPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectionPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectionPropertyTypeItemProvider directionPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectionPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectionPropertyTypeAdapter() {
		if (directionPropertyTypeItemProvider == null) {
			directionPropertyTypeItemProvider = new DirectionPropertyTypeItemProvider(this);
		}

		return directionPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectionVectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectionVectorTypeItemProvider directionVectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectionVectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectionVectorTypeAdapter() {
		if (directionVectorTypeItemProvider == null) {
			directionVectorTypeItemProvider = new DirectionVectorTypeItemProvider(this);
		}

		return directionVectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectPositionListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectPositionListTypeItemProvider directPositionListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectPositionListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectPositionListTypeAdapter() {
		if (directPositionListTypeItemProvider == null) {
			directPositionListTypeItemProvider = new DirectPositionListTypeItemProvider(this);
		}

		return directPositionListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DirectPositionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectPositionTypeItemProvider directPositionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DirectPositionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectPositionTypeAdapter() {
		if (directPositionTypeItemProvider == null) {
			directPositionTypeItemProvider = new DirectPositionTypeItemProvider(this);
		}

		return directPositionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DMSAngleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DMSAngleTypeItemProvider dmsAngleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DMSAngleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDMSAngleTypeAdapter() {
		if (dmsAngleTypeItemProvider == null) {
			dmsAngleTypeItemProvider = new DMSAngleTypeItemProvider(this);
		}

		return dmsAngleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DomainSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DomainSetTypeItemProvider domainSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DomainSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDomainSetTypeAdapter() {
		if (domainSetTypeItemProvider == null) {
			domainSetTypeItemProvider = new DomainSetTypeItemProvider(this);
		}

		return domainSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DynamicFeatureCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicFeatureCollectionTypeItemProvider dynamicFeatureCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DynamicFeatureCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicFeatureCollectionTypeAdapter() {
		if (dynamicFeatureCollectionTypeItemProvider == null) {
			dynamicFeatureCollectionTypeItemProvider = new DynamicFeatureCollectionTypeItemProvider(this);
		}

		return dynamicFeatureCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DynamicFeatureType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicFeatureTypeItemProvider dynamicFeatureTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DynamicFeatureType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicFeatureTypeAdapter() {
		if (dynamicFeatureTypeItemProvider == null) {
			dynamicFeatureTypeItemProvider = new DynamicFeatureTypeItemProvider(this);
		}

		return dynamicFeatureTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EdgeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EdgeTypeItemProvider edgeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EdgeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEdgeTypeAdapter() {
		if (edgeTypeItemProvider == null) {
			edgeTypeItemProvider = new EdgeTypeItemProvider(this);
		}

		return edgeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EllipsoidalCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EllipsoidalCSRefTypeItemProvider ellipsoidalCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EllipsoidalCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEllipsoidalCSRefTypeAdapter() {
		if (ellipsoidalCSRefTypeItemProvider == null) {
			ellipsoidalCSRefTypeItemProvider = new EllipsoidalCSRefTypeItemProvider(this);
		}

		return ellipsoidalCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EllipsoidalCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EllipsoidalCSTypeItemProvider ellipsoidalCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EllipsoidalCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEllipsoidalCSTypeAdapter() {
		if (ellipsoidalCSTypeItemProvider == null) {
			ellipsoidalCSTypeItemProvider = new EllipsoidalCSTypeItemProvider(this);
		}

		return ellipsoidalCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EllipsoidRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EllipsoidRefTypeItemProvider ellipsoidRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EllipsoidRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEllipsoidRefTypeAdapter() {
		if (ellipsoidRefTypeItemProvider == null) {
			ellipsoidRefTypeItemProvider = new EllipsoidRefTypeItemProvider(this);
		}

		return ellipsoidRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EllipsoidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EllipsoidTypeItemProvider ellipsoidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EllipsoidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEllipsoidTypeAdapter() {
		if (ellipsoidTypeItemProvider == null) {
			ellipsoidTypeItemProvider = new EllipsoidTypeItemProvider(this);
		}

		return ellipsoidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EngineeringCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EngineeringCRSRefTypeItemProvider engineeringCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EngineeringCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEngineeringCRSRefTypeAdapter() {
		if (engineeringCRSRefTypeItemProvider == null) {
			engineeringCRSRefTypeItemProvider = new EngineeringCRSRefTypeItemProvider(this);
		}

		return engineeringCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EngineeringCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EngineeringCRSTypeItemProvider engineeringCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EngineeringCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEngineeringCRSTypeAdapter() {
		if (engineeringCRSTypeItemProvider == null) {
			engineeringCRSTypeItemProvider = new EngineeringCRSTypeItemProvider(this);
		}

		return engineeringCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EngineeringDatumRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EngineeringDatumRefTypeItemProvider engineeringDatumRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EngineeringDatumRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEngineeringDatumRefTypeAdapter() {
		if (engineeringDatumRefTypeItemProvider == null) {
			engineeringDatumRefTypeItemProvider = new EngineeringDatumRefTypeItemProvider(this);
		}

		return engineeringDatumRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EngineeringDatumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EngineeringDatumTypeItemProvider engineeringDatumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EngineeringDatumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEngineeringDatumTypeAdapter() {
		if (engineeringDatumTypeItemProvider == null) {
			engineeringDatumTypeItemProvider = new EngineeringDatumTypeItemProvider(this);
		}

		return engineeringDatumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EnvelopeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvelopeTypeItemProvider envelopeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EnvelopeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvelopeTypeAdapter() {
		if (envelopeTypeItemProvider == null) {
			envelopeTypeItemProvider = new EnvelopeTypeItemProvider(this);
		}

		return envelopeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.EnvelopeWithTimePeriodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvelopeWithTimePeriodTypeItemProvider envelopeWithTimePeriodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.EnvelopeWithTimePeriodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvelopeWithTimePeriodTypeAdapter() {
		if (envelopeWithTimePeriodTypeItemProvider == null) {
			envelopeWithTimePeriodTypeItemProvider = new EnvelopeWithTimePeriodTypeItemProvider(this);
		}

		return envelopeWithTimePeriodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ExtentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtentTypeItemProvider extentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ExtentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtentTypeAdapter() {
		if (extentTypeItemProvider == null) {
			extentTypeItemProvider = new ExtentTypeItemProvider(this);
		}

		return extentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FaceTypeItemProvider faceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFaceTypeAdapter() {
		if (faceTypeItemProvider == null) {
			faceTypeItemProvider = new FaceTypeItemProvider(this);
		}

		return faceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FeatureArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureArrayPropertyTypeItemProvider featureArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FeatureArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureArrayPropertyTypeAdapter() {
		if (featureArrayPropertyTypeItemProvider == null) {
			featureArrayPropertyTypeItemProvider = new FeatureArrayPropertyTypeItemProvider(this);
		}

		return featureArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FeatureCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureCollectionTypeItemProvider featureCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FeatureCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureCollectionTypeAdapter() {
		if (featureCollectionTypeItemProvider == null) {
			featureCollectionTypeItemProvider = new FeatureCollectionTypeItemProvider(this);
		}

		return featureCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FeaturePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePropertyTypeItemProvider featurePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FeaturePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePropertyTypeAdapter() {
		if (featurePropertyTypeItemProvider == null) {
			featurePropertyTypeItemProvider = new FeaturePropertyTypeItemProvider(this);
		}

		return featurePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FeatureStylePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureStylePropertyTypeItemProvider featureStylePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FeatureStylePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureStylePropertyTypeAdapter() {
		if (featureStylePropertyTypeItemProvider == null) {
			featureStylePropertyTypeItemProvider = new FeatureStylePropertyTypeItemProvider(this);
		}

		return featureStylePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FeatureStyleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureStyleTypeItemProvider featureStyleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FeatureStyleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureStyleTypeAdapter() {
		if (featureStyleTypeItemProvider == null) {
			featureStyleTypeItemProvider = new FeatureStyleTypeItemProvider(this);
		}

		return featureStyleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileTypeItemProvider fileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileTypeAdapter() {
		if (fileTypeItemProvider == null) {
			fileTypeItemProvider = new FileTypeItemProvider(this);
		}

		return fileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.FormulaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormulaTypeItemProvider formulaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.FormulaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormulaTypeAdapter() {
		if (formulaTypeItemProvider == null) {
			formulaTypeItemProvider = new FormulaTypeItemProvider(this);
		}

		return formulaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeneralConversionRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneralConversionRefTypeItemProvider generalConversionRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeneralConversionRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneralConversionRefTypeAdapter() {
		if (generalConversionRefTypeItemProvider == null) {
			generalConversionRefTypeItemProvider = new GeneralConversionRefTypeItemProvider(this);
		}

		return generalConversionRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeneralTransformationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneralTransformationRefTypeItemProvider generalTransformationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeneralTransformationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneralTransformationRefTypeAdapter() {
		if (generalTransformationRefTypeItemProvider == null) {
			generalTransformationRefTypeItemProvider = new GeneralTransformationRefTypeItemProvider(this);
		}

		return generalTransformationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GenericMetaDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericMetaDataTypeItemProvider genericMetaDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GenericMetaDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericMetaDataTypeAdapter() {
		if (genericMetaDataTypeItemProvider == null) {
			genericMetaDataTypeItemProvider = new GenericMetaDataTypeItemProvider(this);
		}

		return genericMetaDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeocentricCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeocentricCRSRefTypeItemProvider geocentricCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeocentricCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeocentricCRSRefTypeAdapter() {
		if (geocentricCRSRefTypeItemProvider == null) {
			geocentricCRSRefTypeItemProvider = new GeocentricCRSRefTypeItemProvider(this);
		}

		return geocentricCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeocentricCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeocentricCRSTypeItemProvider geocentricCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeocentricCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeocentricCRSTypeAdapter() {
		if (geocentricCRSTypeItemProvider == null) {
			geocentricCRSTypeItemProvider = new GeocentricCRSTypeItemProvider(this);
		}

		return geocentricCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeodesicStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeodesicStringTypeItemProvider geodesicStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeodesicStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeodesicStringTypeAdapter() {
		if (geodesicStringTypeItemProvider == null) {
			geodesicStringTypeItemProvider = new GeodesicStringTypeItemProvider(this);
		}

		return geodesicStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeodesicType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeodesicTypeItemProvider geodesicTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeodesicType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeodesicTypeAdapter() {
		if (geodesicTypeItemProvider == null) {
			geodesicTypeItemProvider = new GeodesicTypeItemProvider(this);
		}

		return geodesicTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeodeticDatumRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeodeticDatumRefTypeItemProvider geodeticDatumRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeodeticDatumRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeodeticDatumRefTypeAdapter() {
		if (geodeticDatumRefTypeItemProvider == null) {
			geodeticDatumRefTypeItemProvider = new GeodeticDatumRefTypeItemProvider(this);
		}

		return geodeticDatumRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeodeticDatumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeodeticDatumTypeItemProvider geodeticDatumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeodeticDatumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeodeticDatumTypeAdapter() {
		if (geodeticDatumTypeItemProvider == null) {
			geodeticDatumTypeItemProvider = new GeodeticDatumTypeItemProvider(this);
		}

		return geodeticDatumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeographicCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeographicCRSRefTypeItemProvider geographicCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeographicCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeographicCRSRefTypeAdapter() {
		if (geographicCRSRefTypeItemProvider == null) {
			geographicCRSRefTypeItemProvider = new GeographicCRSRefTypeItemProvider(this);
		}

		return geographicCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeographicCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeographicCRSTypeItemProvider geographicCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeographicCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeographicCRSTypeAdapter() {
		if (geographicCRSTypeItemProvider == null) {
			geographicCRSTypeItemProvider = new GeographicCRSTypeItemProvider(this);
		}

		return geographicCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometricComplexPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometricComplexPropertyTypeItemProvider geometricComplexPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometricComplexPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometricComplexPropertyTypeAdapter() {
		if (geometricComplexPropertyTypeItemProvider == null) {
			geometricComplexPropertyTypeItemProvider = new GeometricComplexPropertyTypeItemProvider(this);
		}

		return geometricComplexPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometricComplexType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometricComplexTypeItemProvider geometricComplexTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometricComplexType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometricComplexTypeAdapter() {
		if (geometricComplexTypeItemProvider == null) {
			geometricComplexTypeItemProvider = new GeometricComplexTypeItemProvider(this);
		}

		return geometricComplexTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometricPrimitivePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometricPrimitivePropertyTypeItemProvider geometricPrimitivePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometricPrimitivePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometricPrimitivePropertyTypeAdapter() {
		if (geometricPrimitivePropertyTypeItemProvider == null) {
			geometricPrimitivePropertyTypeItemProvider = new GeometricPrimitivePropertyTypeItemProvider(this);
		}

		return geometricPrimitivePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometryArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometryArrayPropertyTypeItemProvider geometryArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometryArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometryArrayPropertyTypeAdapter() {
		if (geometryArrayPropertyTypeItemProvider == null) {
			geometryArrayPropertyTypeItemProvider = new GeometryArrayPropertyTypeItemProvider(this);
		}

		return geometryArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometryPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometryPropertyTypeItemProvider geometryPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometryPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometryPropertyTypeAdapter() {
		if (geometryPropertyTypeItemProvider == null) {
			geometryPropertyTypeItemProvider = new GeometryPropertyTypeItemProvider(this);
		}

		return geometryPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometryStylePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometryStylePropertyTypeItemProvider geometryStylePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometryStylePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometryStylePropertyTypeAdapter() {
		if (geometryStylePropertyTypeItemProvider == null) {
			geometryStylePropertyTypeItemProvider = new GeometryStylePropertyTypeItemProvider(this);
		}

		return geometryStylePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GeometryStyleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeometryStyleTypeItemProvider geometryStyleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GeometryStyleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeometryStyleTypeAdapter() {
		if (geometryStyleTypeItemProvider == null) {
			geometryStyleTypeItemProvider = new GeometryStyleTypeItemProvider(this);
		}

		return geometryStyleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GraphStylePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GraphStylePropertyTypeItemProvider graphStylePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GraphStylePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGraphStylePropertyTypeAdapter() {
		if (graphStylePropertyTypeItemProvider == null) {
			graphStylePropertyTypeItemProvider = new GraphStylePropertyTypeItemProvider(this);
		}

		return graphStylePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GraphStyleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GraphStyleTypeItemProvider graphStyleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GraphStyleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGraphStyleTypeAdapter() {
		if (graphStyleTypeItemProvider == null) {
			graphStyleTypeItemProvider = new GraphStyleTypeItemProvider(this);
		}

		return graphStyleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridCoverageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridCoverageTypeItemProvider gridCoverageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridCoverageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridCoverageTypeAdapter() {
		if (gridCoverageTypeItemProvider == null) {
			gridCoverageTypeItemProvider = new GridCoverageTypeItemProvider(this);
		}

		return gridCoverageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridDomainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridDomainTypeItemProvider gridDomainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridDomainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridDomainTypeAdapter() {
		if (gridDomainTypeItemProvider == null) {
			gridDomainTypeItemProvider = new GridDomainTypeItemProvider(this);
		}

		return gridDomainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridEnvelopeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridEnvelopeTypeItemProvider gridEnvelopeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridEnvelopeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridEnvelopeTypeAdapter() {
		if (gridEnvelopeTypeItemProvider == null) {
			gridEnvelopeTypeItemProvider = new GridEnvelopeTypeItemProvider(this);
		}

		return gridEnvelopeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridFunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridFunctionTypeItemProvider gridFunctionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridFunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridFunctionTypeAdapter() {
		if (gridFunctionTypeItemProvider == null) {
			gridFunctionTypeItemProvider = new GridFunctionTypeItemProvider(this);
		}

		return gridFunctionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridLengthType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridLengthTypeItemProvider gridLengthTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridLengthType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridLengthTypeAdapter() {
		if (gridLengthTypeItemProvider == null) {
			gridLengthTypeItemProvider = new GridLengthTypeItemProvider(this);
		}

		return gridLengthTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridLimitsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridLimitsTypeItemProvider gridLimitsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridLimitsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridLimitsTypeAdapter() {
		if (gridLimitsTypeItemProvider == null) {
			gridLimitsTypeItemProvider = new GridLimitsTypeItemProvider(this);
		}

		return gridLimitsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.GridType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GridTypeItemProvider gridTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.GridType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGridTypeAdapter() {
		if (gridTypeItemProvider == null) {
			gridTypeItemProvider = new GridTypeItemProvider(this);
		}

		return gridTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.HistoryPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HistoryPropertyTypeItemProvider historyPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.HistoryPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHistoryPropertyTypeAdapter() {
		if (historyPropertyTypeItemProvider == null) {
			historyPropertyTypeItemProvider = new HistoryPropertyTypeItemProvider(this);
		}

		return historyPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.IdentifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdentifierTypeItemProvider identifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.IdentifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdentifierTypeAdapter() {
		if (identifierTypeItemProvider == null) {
			identifierTypeItemProvider = new IdentifierTypeItemProvider(this);
		}

		return identifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ImageCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageCRSRefTypeItemProvider imageCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ImageCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageCRSRefTypeAdapter() {
		if (imageCRSRefTypeItemProvider == null) {
			imageCRSRefTypeItemProvider = new ImageCRSRefTypeItemProvider(this);
		}

		return imageCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ImageCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageCRSTypeItemProvider imageCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ImageCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageCRSTypeAdapter() {
		if (imageCRSTypeItemProvider == null) {
			imageCRSTypeItemProvider = new ImageCRSTypeItemProvider(this);
		}

		return imageCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ImageDatumRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageDatumRefTypeItemProvider imageDatumRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ImageDatumRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageDatumRefTypeAdapter() {
		if (imageDatumRefTypeItemProvider == null) {
			imageDatumRefTypeItemProvider = new ImageDatumRefTypeItemProvider(this);
		}

		return imageDatumRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ImageDatumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageDatumTypeItemProvider imageDatumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ImageDatumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageDatumTypeAdapter() {
		if (imageDatumTypeItemProvider == null) {
			imageDatumTypeItemProvider = new ImageDatumTypeItemProvider(this);
		}

		return imageDatumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.IndexMapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexMapTypeItemProvider indexMapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.IndexMapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexMapTypeAdapter() {
		if (indexMapTypeItemProvider == null) {
			indexMapTypeItemProvider = new IndexMapTypeItemProvider(this);
		}

		return indexMapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.IndirectEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndirectEntryTypeItemProvider indirectEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.IndirectEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndirectEntryTypeAdapter() {
		if (indirectEntryTypeItemProvider == null) {
			indirectEntryTypeItemProvider = new IndirectEntryTypeItemProvider(this);
		}

		return indirectEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.IsolatedPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IsolatedPropertyTypeItemProvider isolatedPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.IsolatedPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIsolatedPropertyTypeAdapter() {
		if (isolatedPropertyTypeItemProvider == null) {
			isolatedPropertyTypeItemProvider = new IsolatedPropertyTypeItemProvider(this);
		}

		return isolatedPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.KnotPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KnotPropertyTypeItemProvider knotPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.KnotPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKnotPropertyTypeAdapter() {
		if (knotPropertyTypeItemProvider == null) {
			knotPropertyTypeItemProvider = new KnotPropertyTypeItemProvider(this);
		}

		return knotPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.KnotType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KnotTypeItemProvider knotTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.KnotType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKnotTypeAdapter() {
		if (knotTypeItemProvider == null) {
			knotTypeItemProvider = new KnotTypeItemProvider(this);
		}

		return knotTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LabelStylePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelStylePropertyTypeItemProvider labelStylePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LabelStylePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelStylePropertyTypeAdapter() {
		if (labelStylePropertyTypeItemProvider == null) {
			labelStylePropertyTypeItemProvider = new LabelStylePropertyTypeItemProvider(this);
		}

		return labelStylePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LabelStyleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelStyleTypeItemProvider labelStyleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LabelStyleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelStyleTypeAdapter() {
		if (labelStyleTypeItemProvider == null) {
			labelStyleTypeItemProvider = new LabelStyleTypeItemProvider(this);
		}

		return labelStyleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LabelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelTypeItemProvider labelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LabelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelTypeAdapter() {
		if (labelTypeItemProvider == null) {
			labelTypeItemProvider = new LabelTypeItemProvider(this);
		}

		return labelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LengthType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthTypeItemProvider lengthTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LengthType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthTypeAdapter() {
		if (lengthTypeItemProvider == null) {
			lengthTypeItemProvider = new LengthTypeItemProvider(this);
		}

		return lengthTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LinearCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearCSRefTypeItemProvider linearCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LinearCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearCSRefTypeAdapter() {
		if (linearCSRefTypeItemProvider == null) {
			linearCSRefTypeItemProvider = new LinearCSRefTypeItemProvider(this);
		}

		return linearCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LinearCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearCSTypeItemProvider linearCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LinearCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearCSTypeAdapter() {
		if (linearCSTypeItemProvider == null) {
			linearCSTypeItemProvider = new LinearCSTypeItemProvider(this);
		}

		return linearCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LinearRingPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearRingPropertyTypeItemProvider linearRingPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LinearRingPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearRingPropertyTypeAdapter() {
		if (linearRingPropertyTypeItemProvider == null) {
			linearRingPropertyTypeItemProvider = new LinearRingPropertyTypeItemProvider(this);
		}

		return linearRingPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LinearRingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearRingTypeItemProvider linearRingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LinearRingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearRingTypeAdapter() {
		if (linearRingTypeItemProvider == null) {
			linearRingTypeItemProvider = new LinearRingTypeItemProvider(this);
		}

		return linearRingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LineStringPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LineStringPropertyTypeItemProvider lineStringPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LineStringPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLineStringPropertyTypeAdapter() {
		if (lineStringPropertyTypeItemProvider == null) {
			lineStringPropertyTypeItemProvider = new LineStringPropertyTypeItemProvider(this);
		}

		return lineStringPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LineStringSegmentArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LineStringSegmentArrayPropertyTypeItemProvider lineStringSegmentArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LineStringSegmentArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLineStringSegmentArrayPropertyTypeAdapter() {
		if (lineStringSegmentArrayPropertyTypeItemProvider == null) {
			lineStringSegmentArrayPropertyTypeItemProvider = new LineStringSegmentArrayPropertyTypeItemProvider(this);
		}

		return lineStringSegmentArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LineStringSegmentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LineStringSegmentTypeItemProvider lineStringSegmentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LineStringSegmentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLineStringSegmentTypeAdapter() {
		if (lineStringSegmentTypeItemProvider == null) {
			lineStringSegmentTypeItemProvider = new LineStringSegmentTypeItemProvider(this);
		}

		return lineStringSegmentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LineStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LineStringTypeItemProvider lineStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LineStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLineStringTypeAdapter() {
		if (lineStringTypeItemProvider == null) {
			lineStringTypeItemProvider = new LineStringTypeItemProvider(this);
		}

		return lineStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.LocationPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationPropertyTypeItemProvider locationPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.LocationPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationPropertyTypeAdapter() {
		if (locationPropertyTypeItemProvider == null) {
			locationPropertyTypeItemProvider = new LocationPropertyTypeItemProvider(this);
		}

		return locationPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MeasureListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureListTypeItemProvider measureListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MeasureListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureListTypeAdapter() {
		if (measureListTypeItemProvider == null) {
			measureListTypeItemProvider = new MeasureListTypeItemProvider(this);
		}

		return measureListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MeasureOrNullListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureOrNullListTypeItemProvider measureOrNullListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MeasureOrNullListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureOrNullListTypeAdapter() {
		if (measureOrNullListTypeItemProvider == null) {
			measureOrNullListTypeItemProvider = new MeasureOrNullListTypeItemProvider(this);
		}

		return measureOrNullListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MeasureType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureTypeItemProvider measureTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MeasureType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureTypeAdapter() {
		if (measureTypeItemProvider == null) {
			measureTypeItemProvider = new MeasureTypeItemProvider(this);
		}

		return measureTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MetaDataPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaDataPropertyTypeItemProvider metaDataPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MetaDataPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaDataPropertyTypeAdapter() {
		if (metaDataPropertyTypeItemProvider == null) {
			metaDataPropertyTypeItemProvider = new MetaDataPropertyTypeItemProvider(this);
		}

		return metaDataPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MovingObjectStatusType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MovingObjectStatusTypeItemProvider movingObjectStatusTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MovingObjectStatusType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMovingObjectStatusTypeAdapter() {
		if (movingObjectStatusTypeItemProvider == null) {
			movingObjectStatusTypeItemProvider = new MovingObjectStatusTypeItemProvider(this);
		}

		return movingObjectStatusTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiCurveCoverageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiCurveCoverageTypeItemProvider multiCurveCoverageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiCurveCoverageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiCurveCoverageTypeAdapter() {
		if (multiCurveCoverageTypeItemProvider == null) {
			multiCurveCoverageTypeItemProvider = new MultiCurveCoverageTypeItemProvider(this);
		}

		return multiCurveCoverageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiCurveDomainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiCurveDomainTypeItemProvider multiCurveDomainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiCurveDomainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiCurveDomainTypeAdapter() {
		if (multiCurveDomainTypeItemProvider == null) {
			multiCurveDomainTypeItemProvider = new MultiCurveDomainTypeItemProvider(this);
		}

		return multiCurveDomainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiCurvePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiCurvePropertyTypeItemProvider multiCurvePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiCurvePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiCurvePropertyTypeAdapter() {
		if (multiCurvePropertyTypeItemProvider == null) {
			multiCurvePropertyTypeItemProvider = new MultiCurvePropertyTypeItemProvider(this);
		}

		return multiCurvePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiCurveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiCurveTypeItemProvider multiCurveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiCurveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiCurveTypeAdapter() {
		if (multiCurveTypeItemProvider == null) {
			multiCurveTypeItemProvider = new MultiCurveTypeItemProvider(this);
		}

		return multiCurveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiGeometryPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiGeometryPropertyTypeItemProvider multiGeometryPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiGeometryPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiGeometryPropertyTypeAdapter() {
		if (multiGeometryPropertyTypeItemProvider == null) {
			multiGeometryPropertyTypeItemProvider = new MultiGeometryPropertyTypeItemProvider(this);
		}

		return multiGeometryPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiGeometryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiGeometryTypeItemProvider multiGeometryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiGeometryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiGeometryTypeAdapter() {
		if (multiGeometryTypeItemProvider == null) {
			multiGeometryTypeItemProvider = new MultiGeometryTypeItemProvider(this);
		}

		return multiGeometryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiLineStringPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiLineStringPropertyTypeItemProvider multiLineStringPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiLineStringPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiLineStringPropertyTypeAdapter() {
		if (multiLineStringPropertyTypeItemProvider == null) {
			multiLineStringPropertyTypeItemProvider = new MultiLineStringPropertyTypeItemProvider(this);
		}

		return multiLineStringPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiLineStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiLineStringTypeItemProvider multiLineStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiLineStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiLineStringTypeAdapter() {
		if (multiLineStringTypeItemProvider == null) {
			multiLineStringTypeItemProvider = new MultiLineStringTypeItemProvider(this);
		}

		return multiLineStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiPointCoverageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPointCoverageTypeItemProvider multiPointCoverageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiPointCoverageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPointCoverageTypeAdapter() {
		if (multiPointCoverageTypeItemProvider == null) {
			multiPointCoverageTypeItemProvider = new MultiPointCoverageTypeItemProvider(this);
		}

		return multiPointCoverageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiPointDomainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPointDomainTypeItemProvider multiPointDomainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiPointDomainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPointDomainTypeAdapter() {
		if (multiPointDomainTypeItemProvider == null) {
			multiPointDomainTypeItemProvider = new MultiPointDomainTypeItemProvider(this);
		}

		return multiPointDomainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiPointPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPointPropertyTypeItemProvider multiPointPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiPointPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPointPropertyTypeAdapter() {
		if (multiPointPropertyTypeItemProvider == null) {
			multiPointPropertyTypeItemProvider = new MultiPointPropertyTypeItemProvider(this);
		}

		return multiPointPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiPointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPointTypeItemProvider multiPointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiPointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPointTypeAdapter() {
		if (multiPointTypeItemProvider == null) {
			multiPointTypeItemProvider = new MultiPointTypeItemProvider(this);
		}

		return multiPointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiPolygonPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPolygonPropertyTypeItemProvider multiPolygonPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiPolygonPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPolygonPropertyTypeAdapter() {
		if (multiPolygonPropertyTypeItemProvider == null) {
			multiPolygonPropertyTypeItemProvider = new MultiPolygonPropertyTypeItemProvider(this);
		}

		return multiPolygonPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiPolygonType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPolygonTypeItemProvider multiPolygonTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiPolygonType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPolygonTypeAdapter() {
		if (multiPolygonTypeItemProvider == null) {
			multiPolygonTypeItemProvider = new MultiPolygonTypeItemProvider(this);
		}

		return multiPolygonTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSolidCoverageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSolidCoverageTypeItemProvider multiSolidCoverageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSolidCoverageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSolidCoverageTypeAdapter() {
		if (multiSolidCoverageTypeItemProvider == null) {
			multiSolidCoverageTypeItemProvider = new MultiSolidCoverageTypeItemProvider(this);
		}

		return multiSolidCoverageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSolidDomainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSolidDomainTypeItemProvider multiSolidDomainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSolidDomainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSolidDomainTypeAdapter() {
		if (multiSolidDomainTypeItemProvider == null) {
			multiSolidDomainTypeItemProvider = new MultiSolidDomainTypeItemProvider(this);
		}

		return multiSolidDomainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSolidPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSolidPropertyTypeItemProvider multiSolidPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSolidPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSolidPropertyTypeAdapter() {
		if (multiSolidPropertyTypeItemProvider == null) {
			multiSolidPropertyTypeItemProvider = new MultiSolidPropertyTypeItemProvider(this);
		}

		return multiSolidPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSolidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSolidTypeItemProvider multiSolidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSolidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSolidTypeAdapter() {
		if (multiSolidTypeItemProvider == null) {
			multiSolidTypeItemProvider = new MultiSolidTypeItemProvider(this);
		}

		return multiSolidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSurfaceCoverageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSurfaceCoverageTypeItemProvider multiSurfaceCoverageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSurfaceCoverageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSurfaceCoverageTypeAdapter() {
		if (multiSurfaceCoverageTypeItemProvider == null) {
			multiSurfaceCoverageTypeItemProvider = new MultiSurfaceCoverageTypeItemProvider(this);
		}

		return multiSurfaceCoverageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSurfaceDomainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSurfaceDomainTypeItemProvider multiSurfaceDomainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSurfaceDomainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSurfaceDomainTypeAdapter() {
		if (multiSurfaceDomainTypeItemProvider == null) {
			multiSurfaceDomainTypeItemProvider = new MultiSurfaceDomainTypeItemProvider(this);
		}

		return multiSurfaceDomainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSurfacePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSurfacePropertyTypeItemProvider multiSurfacePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSurfacePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSurfacePropertyTypeAdapter() {
		if (multiSurfacePropertyTypeItemProvider == null) {
			multiSurfacePropertyTypeItemProvider = new MultiSurfacePropertyTypeItemProvider(this);
		}

		return multiSurfacePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.MultiSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiSurfaceTypeItemProvider multiSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.MultiSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiSurfaceTypeAdapter() {
		if (multiSurfaceTypeItemProvider == null) {
			multiSurfaceTypeItemProvider = new MultiSurfaceTypeItemProvider(this);
		}

		return multiSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.NodeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeTypeItemProvider nodeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.NodeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeTypeAdapter() {
		if (nodeTypeItemProvider == null) {
			nodeTypeItemProvider = new NodeTypeItemProvider(this);
		}

		return nodeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ObliqueCartesianCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObliqueCartesianCSRefTypeItemProvider obliqueCartesianCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ObliqueCartesianCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObliqueCartesianCSRefTypeAdapter() {
		if (obliqueCartesianCSRefTypeItemProvider == null) {
			obliqueCartesianCSRefTypeItemProvider = new ObliqueCartesianCSRefTypeItemProvider(this);
		}

		return obliqueCartesianCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ObliqueCartesianCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObliqueCartesianCSTypeItemProvider obliqueCartesianCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ObliqueCartesianCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObliqueCartesianCSTypeAdapter() {
		if (obliqueCartesianCSTypeItemProvider == null) {
			obliqueCartesianCSTypeItemProvider = new ObliqueCartesianCSTypeItemProvider(this);
		}

		return obliqueCartesianCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ObservationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObservationTypeItemProvider observationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ObservationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObservationTypeAdapter() {
		if (observationTypeItemProvider == null) {
			observationTypeItemProvider = new ObservationTypeItemProvider(this);
		}

		return observationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OffsetCurveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OffsetCurveTypeItemProvider offsetCurveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OffsetCurveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOffsetCurveTypeAdapter() {
		if (offsetCurveTypeItemProvider == null) {
			offsetCurveTypeItemProvider = new OffsetCurveTypeItemProvider(this);
		}

		return offsetCurveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationMethodRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationMethodRefTypeItemProvider operationMethodRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationMethodRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationMethodRefTypeAdapter() {
		if (operationMethodRefTypeItemProvider == null) {
			operationMethodRefTypeItemProvider = new OperationMethodRefTypeItemProvider(this);
		}

		return operationMethodRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationMethodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationMethodTypeItemProvider operationMethodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationMethodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationMethodTypeAdapter() {
		if (operationMethodTypeItemProvider == null) {
			operationMethodTypeItemProvider = new OperationMethodTypeItemProvider(this);
		}

		return operationMethodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationParameterGroupRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationParameterGroupRefTypeItemProvider operationParameterGroupRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationParameterGroupRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationParameterGroupRefTypeAdapter() {
		if (operationParameterGroupRefTypeItemProvider == null) {
			operationParameterGroupRefTypeItemProvider = new OperationParameterGroupRefTypeItemProvider(this);
		}

		return operationParameterGroupRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationParameterGroupType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationParameterGroupTypeItemProvider operationParameterGroupTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationParameterGroupType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationParameterGroupTypeAdapter() {
		if (operationParameterGroupTypeItemProvider == null) {
			operationParameterGroupTypeItemProvider = new OperationParameterGroupTypeItemProvider(this);
		}

		return operationParameterGroupTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationParameterRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationParameterRefTypeItemProvider operationParameterRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationParameterRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationParameterRefTypeAdapter() {
		if (operationParameterRefTypeItemProvider == null) {
			operationParameterRefTypeItemProvider = new OperationParameterRefTypeItemProvider(this);
		}

		return operationParameterRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationParameterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationParameterTypeItemProvider operationParameterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationParameterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationParameterTypeAdapter() {
		if (operationParameterTypeItemProvider == null) {
			operationParameterTypeItemProvider = new OperationParameterTypeItemProvider(this);
		}

		return operationParameterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OperationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationRefTypeItemProvider operationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OperationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationRefTypeAdapter() {
		if (operationRefTypeItemProvider == null) {
			operationRefTypeItemProvider = new OperationRefTypeItemProvider(this);
		}

		return operationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OrientableCurveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrientableCurveTypeItemProvider orientableCurveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OrientableCurveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrientableCurveTypeAdapter() {
		if (orientableCurveTypeItemProvider == null) {
			orientableCurveTypeItemProvider = new OrientableCurveTypeItemProvider(this);
		}

		return orientableCurveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.OrientableSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrientableSurfaceTypeItemProvider orientableSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.OrientableSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrientableSurfaceTypeAdapter() {
		if (orientableSurfaceTypeItemProvider == null) {
			orientableSurfaceTypeItemProvider = new OrientableSurfaceTypeItemProvider(this);
		}

		return orientableSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ParameterValueGroupType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterValueGroupTypeItemProvider parameterValueGroupTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ParameterValueGroupType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterValueGroupTypeAdapter() {
		if (parameterValueGroupTypeItemProvider == null) {
			parameterValueGroupTypeItemProvider = new ParameterValueGroupTypeItemProvider(this);
		}

		return parameterValueGroupTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ParameterValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterValueTypeItemProvider parameterValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ParameterValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterValueTypeAdapter() {
		if (parameterValueTypeItemProvider == null) {
			parameterValueTypeItemProvider = new ParameterValueTypeItemProvider(this);
		}

		return parameterValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PassThroughOperationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PassThroughOperationRefTypeItemProvider passThroughOperationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PassThroughOperationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPassThroughOperationRefTypeAdapter() {
		if (passThroughOperationRefTypeItemProvider == null) {
			passThroughOperationRefTypeItemProvider = new PassThroughOperationRefTypeItemProvider(this);
		}

		return passThroughOperationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PassThroughOperationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PassThroughOperationTypeItemProvider passThroughOperationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PassThroughOperationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPassThroughOperationTypeAdapter() {
		if (passThroughOperationTypeItemProvider == null) {
			passThroughOperationTypeItemProvider = new PassThroughOperationTypeItemProvider(this);
		}

		return passThroughOperationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PixelInCellType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PixelInCellTypeItemProvider pixelInCellTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PixelInCellType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPixelInCellTypeAdapter() {
		if (pixelInCellTypeItemProvider == null) {
			pixelInCellTypeItemProvider = new PixelInCellTypeItemProvider(this);
		}

		return pixelInCellTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PointArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointArrayPropertyTypeItemProvider pointArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PointArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointArrayPropertyTypeAdapter() {
		if (pointArrayPropertyTypeItemProvider == null) {
			pointArrayPropertyTypeItemProvider = new PointArrayPropertyTypeItemProvider(this);
		}

		return pointArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PointPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointPropertyTypeItemProvider pointPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PointPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointPropertyTypeAdapter() {
		if (pointPropertyTypeItemProvider == null) {
			pointPropertyTypeItemProvider = new PointPropertyTypeItemProvider(this);
		}

		return pointPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointTypeItemProvider pointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointTypeAdapter() {
		if (pointTypeItemProvider == null) {
			pointTypeItemProvider = new PointTypeItemProvider(this);
		}

		return pointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolarCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolarCSRefTypeItemProvider polarCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolarCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolarCSRefTypeAdapter() {
		if (polarCSRefTypeItemProvider == null) {
			polarCSRefTypeItemProvider = new PolarCSRefTypeItemProvider(this);
		}

		return polarCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolarCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolarCSTypeItemProvider polarCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolarCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolarCSTypeAdapter() {
		if (polarCSTypeItemProvider == null) {
			polarCSTypeItemProvider = new PolarCSTypeItemProvider(this);
		}

		return polarCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolygonPatchArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolygonPatchArrayPropertyTypeItemProvider polygonPatchArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolygonPatchArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolygonPatchArrayPropertyTypeAdapter() {
		if (polygonPatchArrayPropertyTypeItemProvider == null) {
			polygonPatchArrayPropertyTypeItemProvider = new PolygonPatchArrayPropertyTypeItemProvider(this);
		}

		return polygonPatchArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolygonPatchType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolygonPatchTypeItemProvider polygonPatchTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolygonPatchType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolygonPatchTypeAdapter() {
		if (polygonPatchTypeItemProvider == null) {
			polygonPatchTypeItemProvider = new PolygonPatchTypeItemProvider(this);
		}

		return polygonPatchTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolygonPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolygonPropertyTypeItemProvider polygonPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolygonPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolygonPropertyTypeAdapter() {
		if (polygonPropertyTypeItemProvider == null) {
			polygonPropertyTypeItemProvider = new PolygonPropertyTypeItemProvider(this);
		}

		return polygonPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolygonType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolygonTypeItemProvider polygonTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolygonType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolygonTypeAdapter() {
		if (polygonTypeItemProvider == null) {
			polygonTypeItemProvider = new PolygonTypeItemProvider(this);
		}

		return polygonTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PolyhedralSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolyhedralSurfaceTypeItemProvider polyhedralSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PolyhedralSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolyhedralSurfaceTypeAdapter() {
		if (polyhedralSurfaceTypeItemProvider == null) {
			polyhedralSurfaceTypeItemProvider = new PolyhedralSurfaceTypeItemProvider(this);
		}

		return polyhedralSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PrimeMeridianRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimeMeridianRefTypeItemProvider primeMeridianRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PrimeMeridianRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimeMeridianRefTypeAdapter() {
		if (primeMeridianRefTypeItemProvider == null) {
			primeMeridianRefTypeItemProvider = new PrimeMeridianRefTypeItemProvider(this);
		}

		return primeMeridianRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PrimeMeridianType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimeMeridianTypeItemProvider primeMeridianTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PrimeMeridianType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimeMeridianTypeAdapter() {
		if (primeMeridianTypeItemProvider == null) {
			primeMeridianTypeItemProvider = new PrimeMeridianTypeItemProvider(this);
		}

		return primeMeridianTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.PriorityLocationPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PriorityLocationPropertyTypeItemProvider priorityLocationPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.PriorityLocationPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPriorityLocationPropertyTypeAdapter() {
		if (priorityLocationPropertyTypeItemProvider == null) {
			priorityLocationPropertyTypeItemProvider = new PriorityLocationPropertyTypeItemProvider(this);
		}

		return priorityLocationPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ProjectedCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectedCRSRefTypeItemProvider projectedCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ProjectedCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectedCRSRefTypeAdapter() {
		if (projectedCRSRefTypeItemProvider == null) {
			projectedCRSRefTypeItemProvider = new ProjectedCRSRefTypeItemProvider(this);
		}

		return projectedCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ProjectedCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectedCRSTypeItemProvider projectedCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ProjectedCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectedCRSTypeAdapter() {
		if (projectedCRSTypeItemProvider == null) {
			projectedCRSTypeItemProvider = new ProjectedCRSTypeItemProvider(this);
		}

		return projectedCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.QuantityExtentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuantityExtentTypeItemProvider quantityExtentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.QuantityExtentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuantityExtentTypeAdapter() {
		if (quantityExtentTypeItemProvider == null) {
			quantityExtentTypeItemProvider = new QuantityExtentTypeItemProvider(this);
		}

		return quantityExtentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.QuantityPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuantityPropertyTypeItemProvider quantityPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.QuantityPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuantityPropertyTypeAdapter() {
		if (quantityPropertyTypeItemProvider == null) {
			quantityPropertyTypeItemProvider = new QuantityPropertyTypeItemProvider(this);
		}

		return quantityPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RangeParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeParametersTypeItemProvider rangeParametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RangeParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeParametersTypeAdapter() {
		if (rangeParametersTypeItemProvider == null) {
			rangeParametersTypeItemProvider = new RangeParametersTypeItemProvider(this);
		}

		return rangeParametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RangeSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeSetTypeItemProvider rangeSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RangeSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeSetTypeAdapter() {
		if (rangeSetTypeItemProvider == null) {
			rangeSetTypeItemProvider = new RangeSetTypeItemProvider(this);
		}

		return rangeSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RectangleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RectangleTypeItemProvider rectangleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RectangleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRectangleTypeAdapter() {
		if (rectangleTypeItemProvider == null) {
			rectangleTypeItemProvider = new RectangleTypeItemProvider(this);
		}

		return rectangleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RectifiedGridCoverageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RectifiedGridCoverageTypeItemProvider rectifiedGridCoverageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RectifiedGridCoverageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRectifiedGridCoverageTypeAdapter() {
		if (rectifiedGridCoverageTypeItemProvider == null) {
			rectifiedGridCoverageTypeItemProvider = new RectifiedGridCoverageTypeItemProvider(this);
		}

		return rectifiedGridCoverageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RectifiedGridDomainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RectifiedGridDomainTypeItemProvider rectifiedGridDomainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RectifiedGridDomainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRectifiedGridDomainTypeAdapter() {
		if (rectifiedGridDomainTypeItemProvider == null) {
			rectifiedGridDomainTypeItemProvider = new RectifiedGridDomainTypeItemProvider(this);
		}

		return rectifiedGridDomainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RectifiedGridType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RectifiedGridTypeItemProvider rectifiedGridTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RectifiedGridType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRectifiedGridTypeAdapter() {
		if (rectifiedGridTypeItemProvider == null) {
			rectifiedGridTypeItemProvider = new RectifiedGridTypeItemProvider(this);
		}

		return rectifiedGridTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ReferenceSystemRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceSystemRefTypeItemProvider referenceSystemRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ReferenceSystemRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceSystemRefTypeAdapter() {
		if (referenceSystemRefTypeItemProvider == null) {
			referenceSystemRefTypeItemProvider = new ReferenceSystemRefTypeItemProvider(this);
		}

		return referenceSystemRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceTypeItemProvider referenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceTypeAdapter() {
		if (referenceTypeItemProvider == null) {
			referenceTypeItemProvider = new ReferenceTypeItemProvider(this);
		}

		return referenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RefLocationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefLocationTypeItemProvider refLocationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RefLocationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefLocationTypeAdapter() {
		if (refLocationTypeItemProvider == null) {
			refLocationTypeItemProvider = new RefLocationTypeItemProvider(this);
		}

		return refLocationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RelatedTimeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelatedTimeTypeItemProvider relatedTimeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RelatedTimeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelatedTimeTypeAdapter() {
		if (relatedTimeTypeItemProvider == null) {
			relatedTimeTypeItemProvider = new RelatedTimeTypeItemProvider(this);
		}

		return relatedTimeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RelativeInternalPositionalAccuracyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeInternalPositionalAccuracyTypeItemProvider relativeInternalPositionalAccuracyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RelativeInternalPositionalAccuracyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeInternalPositionalAccuracyTypeAdapter() {
		if (relativeInternalPositionalAccuracyTypeItemProvider == null) {
			relativeInternalPositionalAccuracyTypeItemProvider = new RelativeInternalPositionalAccuracyTypeItemProvider(this);
		}

		return relativeInternalPositionalAccuracyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RingPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RingPropertyTypeItemProvider ringPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RingPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRingPropertyTypeAdapter() {
		if (ringPropertyTypeItemProvider == null) {
			ringPropertyTypeItemProvider = new RingPropertyTypeItemProvider(this);
		}

		return ringPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RingTypeItemProvider ringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRingTypeAdapter() {
		if (ringTypeItemProvider == null) {
			ringTypeItemProvider = new RingTypeItemProvider(this);
		}

		return ringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ScalarValuePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarValuePropertyTypeItemProvider scalarValuePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ScalarValuePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarValuePropertyTypeAdapter() {
		if (scalarValuePropertyTypeItemProvider == null) {
			scalarValuePropertyTypeItemProvider = new ScalarValuePropertyTypeItemProvider(this);
		}

		return scalarValuePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ScaleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScaleTypeItemProvider scaleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ScaleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScaleTypeAdapter() {
		if (scaleTypeItemProvider == null) {
			scaleTypeItemProvider = new ScaleTypeItemProvider(this);
		}

		return scaleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SecondDefiningParameterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecondDefiningParameterTypeItemProvider secondDefiningParameterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SecondDefiningParameterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecondDefiningParameterTypeAdapter() {
		if (secondDefiningParameterTypeItemProvider == null) {
			secondDefiningParameterTypeItemProvider = new SecondDefiningParameterTypeItemProvider(this);
		}

		return secondDefiningParameterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SequenceRuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceRuleTypeItemProvider sequenceRuleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SequenceRuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceRuleTypeAdapter() {
		if (sequenceRuleTypeItemProvider == null) {
			sequenceRuleTypeItemProvider = new SequenceRuleTypeItemProvider(this);
		}

		return sequenceRuleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SingleOperationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleOperationRefTypeItemProvider singleOperationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SingleOperationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingleOperationRefTypeAdapter() {
		if (singleOperationRefTypeItemProvider == null) {
			singleOperationRefTypeItemProvider = new SingleOperationRefTypeItemProvider(this);
		}

		return singleOperationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SolidPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SolidPropertyTypeItemProvider solidPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SolidPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSolidPropertyTypeAdapter() {
		if (solidPropertyTypeItemProvider == null) {
			solidPropertyTypeItemProvider = new SolidPropertyTypeItemProvider(this);
		}

		return solidPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SphericalCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SphericalCSRefTypeItemProvider sphericalCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SphericalCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSphericalCSRefTypeAdapter() {
		if (sphericalCSRefTypeItemProvider == null) {
			sphericalCSRefTypeItemProvider = new SphericalCSRefTypeItemProvider(this);
		}

		return sphericalCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SphericalCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SphericalCSTypeItemProvider sphericalCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SphericalCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSphericalCSTypeAdapter() {
		if (sphericalCSTypeItemProvider == null) {
			sphericalCSTypeItemProvider = new SphericalCSTypeItemProvider(this);
		}

		return sphericalCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.StringOrRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringOrRefTypeItemProvider stringOrRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.StringOrRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringOrRefTypeAdapter() {
		if (stringOrRefTypeItemProvider == null) {
			stringOrRefTypeItemProvider = new StringOrRefTypeItemProvider(this);
		}

		return stringOrRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SurfaceArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SurfaceArrayPropertyTypeItemProvider surfaceArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SurfaceArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSurfaceArrayPropertyTypeAdapter() {
		if (surfaceArrayPropertyTypeItemProvider == null) {
			surfaceArrayPropertyTypeItemProvider = new SurfaceArrayPropertyTypeItemProvider(this);
		}

		return surfaceArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SurfacePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SurfacePropertyTypeItemProvider surfacePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SurfacePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSurfacePropertyTypeAdapter() {
		if (surfacePropertyTypeItemProvider == null) {
			surfacePropertyTypeItemProvider = new SurfacePropertyTypeItemProvider(this);
		}

		return surfacePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.RowType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RowTypeItemProvider rowTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.RowType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRowTypeAdapter() {
		if (rowTypeItemProvider == null) {
			rowTypeItemProvider = new RowTypeItemProvider(this);
		}

		return rowTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SolidArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SolidArrayPropertyTypeItemProvider solidArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SolidArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSolidArrayPropertyTypeAdapter() {
		if (solidArrayPropertyTypeItemProvider == null) {
			solidArrayPropertyTypeItemProvider = new SolidArrayPropertyTypeItemProvider(this);
		}

		return solidArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SolidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SolidTypeItemProvider solidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SolidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSolidTypeAdapter() {
		if (solidTypeItemProvider == null) {
			solidTypeItemProvider = new SolidTypeItemProvider(this);
		}

		return solidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SpeedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpeedTypeItemProvider speedTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SpeedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpeedTypeAdapter() {
		if (speedTypeItemProvider == null) {
			speedTypeItemProvider = new SpeedTypeItemProvider(this);
		}

		return speedTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SphereType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SphereTypeItemProvider sphereTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SphereType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSphereTypeAdapter() {
		if (sphereTypeItemProvider == null) {
			sphereTypeItemProvider = new SphereTypeItemProvider(this);
		}

		return sphereTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.StyleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StyleTypeItemProvider styleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.StyleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStyleTypeAdapter() {
		if (styleTypeItemProvider == null) {
			styleTypeItemProvider = new StyleTypeItemProvider(this);
		}

		return styleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.StyleVariationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StyleVariationTypeItemProvider styleVariationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.StyleVariationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStyleVariationTypeAdapter() {
		if (styleVariationTypeItemProvider == null) {
			styleVariationTypeItemProvider = new StyleVariationTypeItemProvider(this);
		}

		return styleVariationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SurfacePatchArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SurfacePatchArrayPropertyTypeItemProvider surfacePatchArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SurfacePatchArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSurfacePatchArrayPropertyTypeAdapter() {
		if (surfacePatchArrayPropertyTypeItemProvider == null) {
			surfacePatchArrayPropertyTypeItemProvider = new SurfacePatchArrayPropertyTypeItemProvider(this);
		}

		return surfacePatchArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SurfaceTypeItemProvider surfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSurfaceTypeAdapter() {
		if (surfaceTypeItemProvider == null) {
			surfaceTypeItemProvider = new SurfaceTypeItemProvider(this);
		}

		return surfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.SymbolType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SymbolTypeItemProvider symbolTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.SymbolType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSymbolTypeAdapter() {
		if (symbolTypeItemProvider == null) {
			symbolTypeItemProvider = new SymbolTypeItemProvider(this);
		}

		return symbolTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TargetPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetPropertyTypeItemProvider targetPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TargetPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetPropertyTypeAdapter() {
		if (targetPropertyTypeItemProvider == null) {
			targetPropertyTypeItemProvider = new TargetPropertyTypeItemProvider(this);
		}

		return targetPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TemporalCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalCRSRefTypeItemProvider temporalCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TemporalCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalCRSRefTypeAdapter() {
		if (temporalCRSRefTypeItemProvider == null) {
			temporalCRSRefTypeItemProvider = new TemporalCRSRefTypeItemProvider(this);
		}

		return temporalCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TemporalCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalCRSTypeItemProvider temporalCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TemporalCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalCRSTypeAdapter() {
		if (temporalCRSTypeItemProvider == null) {
			temporalCRSTypeItemProvider = new TemporalCRSTypeItemProvider(this);
		}

		return temporalCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TemporalCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalCSRefTypeItemProvider temporalCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TemporalCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalCSRefTypeAdapter() {
		if (temporalCSRefTypeItemProvider == null) {
			temporalCSRefTypeItemProvider = new TemporalCSRefTypeItemProvider(this);
		}

		return temporalCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TemporalCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalCSTypeItemProvider temporalCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TemporalCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalCSTypeAdapter() {
		if (temporalCSTypeItemProvider == null) {
			temporalCSTypeItemProvider = new TemporalCSTypeItemProvider(this);
		}

		return temporalCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TemporalDatumRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalDatumRefTypeItemProvider temporalDatumRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TemporalDatumRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalDatumRefTypeAdapter() {
		if (temporalDatumRefTypeItemProvider == null) {
			temporalDatumRefTypeItemProvider = new TemporalDatumRefTypeItemProvider(this);
		}

		return temporalDatumRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TemporalDatumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalDatumTypeItemProvider temporalDatumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TemporalDatumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalDatumTypeAdapter() {
		if (temporalDatumTypeItemProvider == null) {
			temporalDatumTypeItemProvider = new TemporalDatumTypeItemProvider(this);
		}

		return temporalDatumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeCalendarEraPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeCalendarEraPropertyTypeItemProvider timeCalendarEraPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeCalendarEraPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeCalendarEraPropertyTypeAdapter() {
		if (timeCalendarEraPropertyTypeItemProvider == null) {
			timeCalendarEraPropertyTypeItemProvider = new TimeCalendarEraPropertyTypeItemProvider(this);
		}

		return timeCalendarEraPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeCalendarEraType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeCalendarEraTypeItemProvider timeCalendarEraTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeCalendarEraType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeCalendarEraTypeAdapter() {
		if (timeCalendarEraTypeItemProvider == null) {
			timeCalendarEraTypeItemProvider = new TimeCalendarEraTypeItemProvider(this);
		}

		return timeCalendarEraTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeCalendarPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeCalendarPropertyTypeItemProvider timeCalendarPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeCalendarPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeCalendarPropertyTypeAdapter() {
		if (timeCalendarPropertyTypeItemProvider == null) {
			timeCalendarPropertyTypeItemProvider = new TimeCalendarPropertyTypeItemProvider(this);
		}

		return timeCalendarPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeCalendarType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeCalendarTypeItemProvider timeCalendarTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeCalendarType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeCalendarTypeAdapter() {
		if (timeCalendarTypeItemProvider == null) {
			timeCalendarTypeItemProvider = new TimeCalendarTypeItemProvider(this);
		}

		return timeCalendarTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeClockPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeClockPropertyTypeItemProvider timeClockPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeClockPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeClockPropertyTypeAdapter() {
		if (timeClockPropertyTypeItemProvider == null) {
			timeClockPropertyTypeItemProvider = new TimeClockPropertyTypeItemProvider(this);
		}

		return timeClockPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeClockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeClockTypeItemProvider timeClockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeClockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeClockTypeAdapter() {
		if (timeClockTypeItemProvider == null) {
			timeClockTypeItemProvider = new TimeClockTypeItemProvider(this);
		}

		return timeClockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeCoordinateSystemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeCoordinateSystemTypeItemProvider timeCoordinateSystemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeCoordinateSystemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeCoordinateSystemTypeAdapter() {
		if (timeCoordinateSystemTypeItemProvider == null) {
			timeCoordinateSystemTypeItemProvider = new TimeCoordinateSystemTypeItemProvider(this);
		}

		return timeCoordinateSystemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeEdgePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeEdgePropertyTypeItemProvider timeEdgePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeEdgePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeEdgePropertyTypeAdapter() {
		if (timeEdgePropertyTypeItemProvider == null) {
			timeEdgePropertyTypeItemProvider = new TimeEdgePropertyTypeItemProvider(this);
		}

		return timeEdgePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeEdgeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeEdgeTypeItemProvider timeEdgeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeEdgeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeEdgeTypeAdapter() {
		if (timeEdgeTypeItemProvider == null) {
			timeEdgeTypeItemProvider = new TimeEdgeTypeItemProvider(this);
		}

		return timeEdgeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeGeometricPrimitivePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeGeometricPrimitivePropertyTypeItemProvider timeGeometricPrimitivePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeGeometricPrimitivePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeGeometricPrimitivePropertyTypeAdapter() {
		if (timeGeometricPrimitivePropertyTypeItemProvider == null) {
			timeGeometricPrimitivePropertyTypeItemProvider = new TimeGeometricPrimitivePropertyTypeItemProvider(this);
		}

		return timeGeometricPrimitivePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeInstantPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeInstantPropertyTypeItemProvider timeInstantPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeInstantPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeInstantPropertyTypeAdapter() {
		if (timeInstantPropertyTypeItemProvider == null) {
			timeInstantPropertyTypeItemProvider = new TimeInstantPropertyTypeItemProvider(this);
		}

		return timeInstantPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeInstantType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeInstantTypeItemProvider timeInstantTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeInstantType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeInstantTypeAdapter() {
		if (timeInstantTypeItemProvider == null) {
			timeInstantTypeItemProvider = new TimeInstantTypeItemProvider(this);
		}

		return timeInstantTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeIntervalLengthType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeIntervalLengthTypeItemProvider timeIntervalLengthTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeIntervalLengthType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeIntervalLengthTypeAdapter() {
		if (timeIntervalLengthTypeItemProvider == null) {
			timeIntervalLengthTypeItemProvider = new TimeIntervalLengthTypeItemProvider(this);
		}

		return timeIntervalLengthTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeNodePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeNodePropertyTypeItemProvider timeNodePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeNodePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeNodePropertyTypeAdapter() {
		if (timeNodePropertyTypeItemProvider == null) {
			timeNodePropertyTypeItemProvider = new TimeNodePropertyTypeItemProvider(this);
		}

		return timeNodePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeNodeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeNodeTypeItemProvider timeNodeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeNodeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeNodeTypeAdapter() {
		if (timeNodeTypeItemProvider == null) {
			timeNodeTypeItemProvider = new TimeNodeTypeItemProvider(this);
		}

		return timeNodeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeOrdinalEraPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeOrdinalEraPropertyTypeItemProvider timeOrdinalEraPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeOrdinalEraPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeOrdinalEraPropertyTypeAdapter() {
		if (timeOrdinalEraPropertyTypeItemProvider == null) {
			timeOrdinalEraPropertyTypeItemProvider = new TimeOrdinalEraPropertyTypeItemProvider(this);
		}

		return timeOrdinalEraPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeOrdinalEraType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeOrdinalEraTypeItemProvider timeOrdinalEraTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeOrdinalEraType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeOrdinalEraTypeAdapter() {
		if (timeOrdinalEraTypeItemProvider == null) {
			timeOrdinalEraTypeItemProvider = new TimeOrdinalEraTypeItemProvider(this);
		}

		return timeOrdinalEraTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeOrdinalReferenceSystemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeOrdinalReferenceSystemTypeItemProvider timeOrdinalReferenceSystemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeOrdinalReferenceSystemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeOrdinalReferenceSystemTypeAdapter() {
		if (timeOrdinalReferenceSystemTypeItemProvider == null) {
			timeOrdinalReferenceSystemTypeItemProvider = new TimeOrdinalReferenceSystemTypeItemProvider(this);
		}

		return timeOrdinalReferenceSystemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimePeriodPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePeriodPropertyTypeItemProvider timePeriodPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimePeriodPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePeriodPropertyTypeAdapter() {
		if (timePeriodPropertyTypeItemProvider == null) {
			timePeriodPropertyTypeItemProvider = new TimePeriodPropertyTypeItemProvider(this);
		}

		return timePeriodPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimePeriodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePeriodTypeItemProvider timePeriodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimePeriodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePeriodTypeAdapter() {
		if (timePeriodTypeItemProvider == null) {
			timePeriodTypeItemProvider = new TimePeriodTypeItemProvider(this);
		}

		return timePeriodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimePositionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePositionTypeItemProvider timePositionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimePositionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePositionTypeAdapter() {
		if (timePositionTypeItemProvider == null) {
			timePositionTypeItemProvider = new TimePositionTypeItemProvider(this);
		}

		return timePositionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimePrimitivePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePrimitivePropertyTypeItemProvider timePrimitivePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimePrimitivePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePrimitivePropertyTypeAdapter() {
		if (timePrimitivePropertyTypeItemProvider == null) {
			timePrimitivePropertyTypeItemProvider = new TimePrimitivePropertyTypeItemProvider(this);
		}

		return timePrimitivePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeTopologyComplexPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeTopologyComplexPropertyTypeItemProvider timeTopologyComplexPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeTopologyComplexPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeTopologyComplexPropertyTypeAdapter() {
		if (timeTopologyComplexPropertyTypeItemProvider == null) {
			timeTopologyComplexPropertyTypeItemProvider = new TimeTopologyComplexPropertyTypeItemProvider(this);
		}

		return timeTopologyComplexPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeTopologyComplexType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeTopologyComplexTypeItemProvider timeTopologyComplexTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeTopologyComplexType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeTopologyComplexTypeAdapter() {
		if (timeTopologyComplexTypeItemProvider == null) {
			timeTopologyComplexTypeItemProvider = new TimeTopologyComplexTypeItemProvider(this);
		}

		return timeTopologyComplexTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeTopologyPrimitivePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeTopologyPrimitivePropertyTypeItemProvider timeTopologyPrimitivePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeTopologyPrimitivePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeTopologyPrimitivePropertyTypeAdapter() {
		if (timeTopologyPrimitivePropertyTypeItemProvider == null) {
			timeTopologyPrimitivePropertyTypeItemProvider = new TimeTopologyPrimitivePropertyTypeItemProvider(this);
		}

		return timeTopologyPrimitivePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TimeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeTypeItemProvider timeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TimeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeTypeAdapter() {
		if (timeTypeItemProvider == null) {
			timeTypeItemProvider = new TimeTypeItemProvider(this);
		}

		return timeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TinType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TinTypeItemProvider tinTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TinType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTinTypeAdapter() {
		if (tinTypeItemProvider == null) {
			tinTypeItemProvider = new TinTypeItemProvider(this);
		}

		return tinTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoComplexMemberType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoComplexMemberTypeItemProvider topoComplexMemberTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoComplexMemberType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoComplexMemberTypeAdapter() {
		if (topoComplexMemberTypeItemProvider == null) {
			topoComplexMemberTypeItemProvider = new TopoComplexMemberTypeItemProvider(this);
		}

		return topoComplexMemberTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoComplexType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoComplexTypeItemProvider topoComplexTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoComplexType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoComplexTypeAdapter() {
		if (topoComplexTypeItemProvider == null) {
			topoComplexTypeItemProvider = new TopoComplexTypeItemProvider(this);
		}

		return topoComplexTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoCurvePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoCurvePropertyTypeItemProvider topoCurvePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoCurvePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoCurvePropertyTypeAdapter() {
		if (topoCurvePropertyTypeItemProvider == null) {
			topoCurvePropertyTypeItemProvider = new TopoCurvePropertyTypeItemProvider(this);
		}

		return topoCurvePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoCurveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoCurveTypeItemProvider topoCurveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoCurveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoCurveTypeAdapter() {
		if (topoCurveTypeItemProvider == null) {
			topoCurveTypeItemProvider = new TopoCurveTypeItemProvider(this);
		}

		return topoCurveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopologyStylePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopologyStylePropertyTypeItemProvider topologyStylePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopologyStylePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopologyStylePropertyTypeAdapter() {
		if (topologyStylePropertyTypeItemProvider == null) {
			topologyStylePropertyTypeItemProvider = new TopologyStylePropertyTypeItemProvider(this);
		}

		return topologyStylePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopologyStyleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopologyStyleTypeItemProvider topologyStyleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopologyStyleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopologyStyleTypeAdapter() {
		if (topologyStyleTypeItemProvider == null) {
			topologyStyleTypeItemProvider = new TopologyStyleTypeItemProvider(this);
		}

		return topologyStyleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoPointPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoPointPropertyTypeItemProvider topoPointPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoPointPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoPointPropertyTypeAdapter() {
		if (topoPointPropertyTypeItemProvider == null) {
			topoPointPropertyTypeItemProvider = new TopoPointPropertyTypeItemProvider(this);
		}

		return topoPointPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoPointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoPointTypeItemProvider topoPointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoPointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoPointTypeAdapter() {
		if (topoPointTypeItemProvider == null) {
			topoPointTypeItemProvider = new TopoPointTypeItemProvider(this);
		}

		return topoPointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoPrimitiveArrayAssociationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoPrimitiveArrayAssociationTypeItemProvider topoPrimitiveArrayAssociationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoPrimitiveArrayAssociationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoPrimitiveArrayAssociationTypeAdapter() {
		if (topoPrimitiveArrayAssociationTypeItemProvider == null) {
			topoPrimitiveArrayAssociationTypeItemProvider = new TopoPrimitiveArrayAssociationTypeItemProvider(this);
		}

		return topoPrimitiveArrayAssociationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoPrimitiveMemberType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoPrimitiveMemberTypeItemProvider topoPrimitiveMemberTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoPrimitiveMemberType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoPrimitiveMemberTypeAdapter() {
		if (topoPrimitiveMemberTypeItemProvider == null) {
			topoPrimitiveMemberTypeItemProvider = new TopoPrimitiveMemberTypeItemProvider(this);
		}

		return topoPrimitiveMemberTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoSolidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoSolidTypeItemProvider topoSolidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoSolidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoSolidTypeAdapter() {
		if (topoSolidTypeItemProvider == null) {
			topoSolidTypeItemProvider = new TopoSolidTypeItemProvider(this);
		}

		return topoSolidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoSurfacePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoSurfacePropertyTypeItemProvider topoSurfacePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoSurfacePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoSurfacePropertyTypeAdapter() {
		if (topoSurfacePropertyTypeItemProvider == null) {
			topoSurfacePropertyTypeItemProvider = new TopoSurfacePropertyTypeItemProvider(this);
		}

		return topoSurfacePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoSurfaceTypeItemProvider topoSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoSurfaceTypeAdapter() {
		if (topoSurfaceTypeItemProvider == null) {
			topoSurfaceTypeItemProvider = new TopoSurfaceTypeItemProvider(this);
		}

		return topoSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoVolumePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoVolumePropertyTypeItemProvider topoVolumePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoVolumePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoVolumePropertyTypeAdapter() {
		if (topoVolumePropertyTypeItemProvider == null) {
			topoVolumePropertyTypeItemProvider = new TopoVolumePropertyTypeItemProvider(this);
		}

		return topoVolumePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TopoVolumeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopoVolumeTypeItemProvider topoVolumeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TopoVolumeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopoVolumeTypeAdapter() {
		if (topoVolumeTypeItemProvider == null) {
			topoVolumeTypeItemProvider = new TopoVolumeTypeItemProvider(this);
		}

		return topoVolumeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TrackType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TrackTypeItemProvider trackTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TrackType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrackTypeAdapter() {
		if (trackTypeItemProvider == null) {
			trackTypeItemProvider = new TrackTypeItemProvider(this);
		}

		return trackTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TransformationRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformationRefTypeItemProvider transformationRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TransformationRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformationRefTypeAdapter() {
		if (transformationRefTypeItemProvider == null) {
			transformationRefTypeItemProvider = new TransformationRefTypeItemProvider(this);
		}

		return transformationRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TransformationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformationTypeItemProvider transformationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TransformationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformationTypeAdapter() {
		if (transformationTypeItemProvider == null) {
			transformationTypeItemProvider = new TransformationTypeItemProvider(this);
		}

		return transformationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TrianglePatchArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TrianglePatchArrayPropertyTypeItemProvider trianglePatchArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TrianglePatchArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrianglePatchArrayPropertyTypeAdapter() {
		if (trianglePatchArrayPropertyTypeItemProvider == null) {
			trianglePatchArrayPropertyTypeItemProvider = new TrianglePatchArrayPropertyTypeItemProvider(this);
		}

		return trianglePatchArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TriangleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriangleTypeItemProvider triangleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TriangleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriangleTypeAdapter() {
		if (triangleTypeItemProvider == null) {
			triangleTypeItemProvider = new TriangleTypeItemProvider(this);
		}

		return triangleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.TriangulatedSurfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriangulatedSurfaceTypeItemProvider triangulatedSurfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.TriangulatedSurfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriangulatedSurfaceTypeAdapter() {
		if (triangulatedSurfaceTypeItemProvider == null) {
			triangulatedSurfaceTypeItemProvider = new TriangulatedSurfaceTypeItemProvider(this);
		}

		return triangulatedSurfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.UnitDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitDefinitionTypeItemProvider unitDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.UnitDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitDefinitionTypeAdapter() {
		if (unitDefinitionTypeItemProvider == null) {
			unitDefinitionTypeItemProvider = new UnitDefinitionTypeItemProvider(this);
		}

		return unitDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.UnitOfMeasureType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitOfMeasureTypeItemProvider unitOfMeasureTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.UnitOfMeasureType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitOfMeasureTypeAdapter() {
		if (unitOfMeasureTypeItemProvider == null) {
			unitOfMeasureTypeItemProvider = new UnitOfMeasureTypeItemProvider(this);
		}

		return unitOfMeasureTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.UserDefinedCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserDefinedCSRefTypeItemProvider userDefinedCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.UserDefinedCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserDefinedCSRefTypeAdapter() {
		if (userDefinedCSRefTypeItemProvider == null) {
			userDefinedCSRefTypeItemProvider = new UserDefinedCSRefTypeItemProvider(this);
		}

		return userDefinedCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.UserDefinedCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserDefinedCSTypeItemProvider userDefinedCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.UserDefinedCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserDefinedCSTypeAdapter() {
		if (userDefinedCSTypeItemProvider == null) {
			userDefinedCSTypeItemProvider = new UserDefinedCSTypeItemProvider(this);
		}

		return userDefinedCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ValueArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueArrayPropertyTypeItemProvider valueArrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ValueArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueArrayPropertyTypeAdapter() {
		if (valueArrayPropertyTypeItemProvider == null) {
			valueArrayPropertyTypeItemProvider = new ValueArrayPropertyTypeItemProvider(this);
		}

		return valueArrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ValueArrayType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueArrayTypeItemProvider valueArrayTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ValueArrayType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueArrayTypeAdapter() {
		if (valueArrayTypeItemProvider == null) {
			valueArrayTypeItemProvider = new ValueArrayTypeItemProvider(this);
		}

		return valueArrayTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.ValuePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValuePropertyTypeItemProvider valuePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.ValuePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValuePropertyTypeAdapter() {
		if (valuePropertyTypeItemProvider == null) {
			valuePropertyTypeItemProvider = new ValuePropertyTypeItemProvider(this);
		}

		return valuePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VectorTypeItemProvider vectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVectorTypeAdapter() {
		if (vectorTypeItemProvider == null) {
			vectorTypeItemProvider = new VectorTypeItemProvider(this);
		}

		return vectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalCRSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalCRSRefTypeItemProvider verticalCRSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalCRSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalCRSRefTypeAdapter() {
		if (verticalCRSRefTypeItemProvider == null) {
			verticalCRSRefTypeItemProvider = new VerticalCRSRefTypeItemProvider(this);
		}

		return verticalCRSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalCRSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalCRSTypeItemProvider verticalCRSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalCRSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalCRSTypeAdapter() {
		if (verticalCRSTypeItemProvider == null) {
			verticalCRSTypeItemProvider = new VerticalCRSTypeItemProvider(this);
		}

		return verticalCRSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalCSRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalCSRefTypeItemProvider verticalCSRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalCSRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalCSRefTypeAdapter() {
		if (verticalCSRefTypeItemProvider == null) {
			verticalCSRefTypeItemProvider = new VerticalCSRefTypeItemProvider(this);
		}

		return verticalCSRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalCSType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalCSTypeItemProvider verticalCSTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalCSType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalCSTypeAdapter() {
		if (verticalCSTypeItemProvider == null) {
			verticalCSTypeItemProvider = new VerticalCSTypeItemProvider(this);
		}

		return verticalCSTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalDatumRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalDatumRefTypeItemProvider verticalDatumRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalDatumRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalDatumRefTypeAdapter() {
		if (verticalDatumRefTypeItemProvider == null) {
			verticalDatumRefTypeItemProvider = new VerticalDatumRefTypeItemProvider(this);
		}

		return verticalDatumRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalDatumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalDatumTypeItemProvider verticalDatumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalDatumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalDatumTypeAdapter() {
		if (verticalDatumTypeItemProvider == null) {
			verticalDatumTypeItemProvider = new VerticalDatumTypeItemProvider(this);
		}

		return verticalDatumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VerticalDatumTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerticalDatumTypeTypeItemProvider verticalDatumTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VerticalDatumTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerticalDatumTypeTypeAdapter() {
		if (verticalDatumTypeTypeItemProvider == null) {
			verticalDatumTypeTypeItemProvider = new VerticalDatumTypeTypeItemProvider(this);
		}

		return verticalDatumTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.opengis.gml.VolumeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VolumeTypeItemProvider volumeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link net.opengis.gml.VolumeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVolumeTypeAdapter() {
		if (volumeTypeItemProvider == null) {
			volumeTypeItemProvider = new VolumeTypeItemProvider(this);
		}

		return volumeTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (absoluteExternalPositionalAccuracyTypeItemProvider != null) absoluteExternalPositionalAccuracyTypeItemProvider.dispose();
		if (abstractGeneralOperationParameterRefTypeItemProvider != null) abstractGeneralOperationParameterRefTypeItemProvider.dispose();
		if (abstractGriddedSurfaceTypeItemProvider != null) abstractGriddedSurfaceTypeItemProvider.dispose();
		if (abstractParametricCurveSurfaceTypeItemProvider != null) abstractParametricCurveSurfaceTypeItemProvider.dispose();
		if (abstractRingPropertyTypeItemProvider != null) abstractRingPropertyTypeItemProvider.dispose();
		if (abstractSolidTypeItemProvider != null) abstractSolidTypeItemProvider.dispose();
		if (abstractSurfaceTypeItemProvider != null) abstractSurfaceTypeItemProvider.dispose();
		if (affinePlacementTypeItemProvider != null) affinePlacementTypeItemProvider.dispose();
		if (angleChoiceTypeItemProvider != null) angleChoiceTypeItemProvider.dispose();
		if (angleTypeItemProvider != null) angleTypeItemProvider.dispose();
		if (arcByBulgeTypeItemProvider != null) arcByBulgeTypeItemProvider.dispose();
		if (arcByCenterPointTypeItemProvider != null) arcByCenterPointTypeItemProvider.dispose();
		if (arcStringByBulgeTypeItemProvider != null) arcStringByBulgeTypeItemProvider.dispose();
		if (arcStringTypeItemProvider != null) arcStringTypeItemProvider.dispose();
		if (arcTypeItemProvider != null) arcTypeItemProvider.dispose();
		if (areaTypeItemProvider != null) areaTypeItemProvider.dispose();
		if (arrayAssociationTypeItemProvider != null) arrayAssociationTypeItemProvider.dispose();
		if (arrayTypeItemProvider != null) arrayTypeItemProvider.dispose();
		if (associationTypeItemProvider != null) associationTypeItemProvider.dispose();
		if (bagTypeItemProvider != null) bagTypeItemProvider.dispose();
		if (baseStyleDescriptorTypeItemProvider != null) baseStyleDescriptorTypeItemProvider.dispose();
		if (baseUnitTypeItemProvider != null) baseUnitTypeItemProvider.dispose();
		if (bezierTypeItemProvider != null) bezierTypeItemProvider.dispose();
		if (booleanPropertyTypeItemProvider != null) booleanPropertyTypeItemProvider.dispose();
		if (boundingShapeTypeItemProvider != null) boundingShapeTypeItemProvider.dispose();
		if (bSplineTypeItemProvider != null) bSplineTypeItemProvider.dispose();
		if (cartesianCSRefTypeItemProvider != null) cartesianCSRefTypeItemProvider.dispose();
		if (cartesianCSTypeItemProvider != null) cartesianCSTypeItemProvider.dispose();
		if (categoryExtentTypeItemProvider != null) categoryExtentTypeItemProvider.dispose();
		if (categoryPropertyTypeItemProvider != null) categoryPropertyTypeItemProvider.dispose();
		if (circleByCenterPointTypeItemProvider != null) circleByCenterPointTypeItemProvider.dispose();
		if (circleTypeItemProvider != null) circleTypeItemProvider.dispose();
		if (clothoidTypeItemProvider != null) clothoidTypeItemProvider.dispose();
		if (codeListTypeItemProvider != null) codeListTypeItemProvider.dispose();
		if (codeOrNullListTypeItemProvider != null) codeOrNullListTypeItemProvider.dispose();
		if (codeTypeItemProvider != null) codeTypeItemProvider.dispose();
		if (compositeCurvePropertyTypeItemProvider != null) compositeCurvePropertyTypeItemProvider.dispose();
		if (compositeCurveTypeItemProvider != null) compositeCurveTypeItemProvider.dispose();
		if (compositeSolidPropertyTypeItemProvider != null) compositeSolidPropertyTypeItemProvider.dispose();
		if (compositeSolidTypeItemProvider != null) compositeSolidTypeItemProvider.dispose();
		if (compositeSurfacePropertyTypeItemProvider != null) compositeSurfacePropertyTypeItemProvider.dispose();
		if (compositeSurfaceTypeItemProvider != null) compositeSurfaceTypeItemProvider.dispose();
		if (compositeValueTypeItemProvider != null) compositeValueTypeItemProvider.dispose();
		if (compoundCRSRefTypeItemProvider != null) compoundCRSRefTypeItemProvider.dispose();
		if (compoundCRSTypeItemProvider != null) compoundCRSTypeItemProvider.dispose();
		if (concatenatedOperationRefTypeItemProvider != null) concatenatedOperationRefTypeItemProvider.dispose();
		if (concatenatedOperationTypeItemProvider != null) concatenatedOperationTypeItemProvider.dispose();
		if (coneTypeItemProvider != null) coneTypeItemProvider.dispose();
		if (containerPropertyTypeItemProvider != null) containerPropertyTypeItemProvider.dispose();
		if (controlPointTypeItemProvider != null) controlPointTypeItemProvider.dispose();
		if (conventionalUnitTypeItemProvider != null) conventionalUnitTypeItemProvider.dispose();
		if (conversionRefTypeItemProvider != null) conversionRefTypeItemProvider.dispose();
		if (conversionToPreferredUnitTypeItemProvider != null) conversionToPreferredUnitTypeItemProvider.dispose();
		if (conversionTypeItemProvider != null) conversionTypeItemProvider.dispose();
		if (coordinateOperationRefTypeItemProvider != null) coordinateOperationRefTypeItemProvider.dispose();
		if (coordinateReferenceSystemRefTypeItemProvider != null) coordinateReferenceSystemRefTypeItemProvider.dispose();
		if (coordinatesTypeItemProvider != null) coordinatesTypeItemProvider.dispose();
		if (coordinateSystemAxisRefTypeItemProvider != null) coordinateSystemAxisRefTypeItemProvider.dispose();
		if (coordinateSystemAxisTypeItemProvider != null) coordinateSystemAxisTypeItemProvider.dispose();
		if (coordinateSystemRefTypeItemProvider != null) coordinateSystemRefTypeItemProvider.dispose();
		if (coordTypeItemProvider != null) coordTypeItemProvider.dispose();
		if (countPropertyTypeItemProvider != null) countPropertyTypeItemProvider.dispose();
		if (covarianceElementTypeItemProvider != null) covarianceElementTypeItemProvider.dispose();
		if (covarianceMatrixTypeItemProvider != null) covarianceMatrixTypeItemProvider.dispose();
		if (coverageFunctionTypeItemProvider != null) coverageFunctionTypeItemProvider.dispose();
		if (crsRefTypeItemProvider != null) crsRefTypeItemProvider.dispose();
		if (cubicSplineTypeItemProvider != null) cubicSplineTypeItemProvider.dispose();
		if (curveArrayPropertyTypeItemProvider != null) curveArrayPropertyTypeItemProvider.dispose();
		if (curvePropertyTypeItemProvider != null) curvePropertyTypeItemProvider.dispose();
		if (curveSegmentArrayPropertyTypeItemProvider != null) curveSegmentArrayPropertyTypeItemProvider.dispose();
		if (curveTypeItemProvider != null) curveTypeItemProvider.dispose();
		if (cylinderTypeItemProvider != null) cylinderTypeItemProvider.dispose();
		if (cylindricalCSRefTypeItemProvider != null) cylindricalCSRefTypeItemProvider.dispose();
		if (cylindricalCSTypeItemProvider != null) cylindricalCSTypeItemProvider.dispose();
		if (dataBlockTypeItemProvider != null) dataBlockTypeItemProvider.dispose();
		if (datumRefTypeItemProvider != null) datumRefTypeItemProvider.dispose();
		if (defaultStylePropertyTypeItemProvider != null) defaultStylePropertyTypeItemProvider.dispose();
		if (definitionProxyTypeItemProvider != null) definitionProxyTypeItemProvider.dispose();
		if (definitionTypeItemProvider != null) definitionTypeItemProvider.dispose();
		if (degreesTypeItemProvider != null) degreesTypeItemProvider.dispose();
		if (derivationUnitTermTypeItemProvider != null) derivationUnitTermTypeItemProvider.dispose();
		if (derivedCRSRefTypeItemProvider != null) derivedCRSRefTypeItemProvider.dispose();
		if (derivedCRSTypeItemProvider != null) derivedCRSTypeItemProvider.dispose();
		if (derivedCRSTypeTypeItemProvider != null) derivedCRSTypeTypeItemProvider.dispose();
		if (derivedUnitTypeItemProvider != null) derivedUnitTypeItemProvider.dispose();
		if (dictionaryEntryTypeItemProvider != null) dictionaryEntryTypeItemProvider.dispose();
		if (dictionaryTypeItemProvider != null) dictionaryTypeItemProvider.dispose();
		if (directedEdgePropertyTypeItemProvider != null) directedEdgePropertyTypeItemProvider.dispose();
		if (directedFacePropertyTypeItemProvider != null) directedFacePropertyTypeItemProvider.dispose();
		if (directedNodePropertyTypeItemProvider != null) directedNodePropertyTypeItemProvider.dispose();
		if (directedObservationAtDistanceTypeItemProvider != null) directedObservationAtDistanceTypeItemProvider.dispose();
		if (directedObservationTypeItemProvider != null) directedObservationTypeItemProvider.dispose();
		if (directedTopoSolidPropertyTypeItemProvider != null) directedTopoSolidPropertyTypeItemProvider.dispose();
		if (directionPropertyTypeItemProvider != null) directionPropertyTypeItemProvider.dispose();
		if (directionVectorTypeItemProvider != null) directionVectorTypeItemProvider.dispose();
		if (directPositionListTypeItemProvider != null) directPositionListTypeItemProvider.dispose();
		if (directPositionTypeItemProvider != null) directPositionTypeItemProvider.dispose();
		if (dmsAngleTypeItemProvider != null) dmsAngleTypeItemProvider.dispose();
		if (domainSetTypeItemProvider != null) domainSetTypeItemProvider.dispose();
		if (dynamicFeatureCollectionTypeItemProvider != null) dynamicFeatureCollectionTypeItemProvider.dispose();
		if (dynamicFeatureTypeItemProvider != null) dynamicFeatureTypeItemProvider.dispose();
		if (edgeTypeItemProvider != null) edgeTypeItemProvider.dispose();
		if (ellipsoidalCSRefTypeItemProvider != null) ellipsoidalCSRefTypeItemProvider.dispose();
		if (ellipsoidalCSTypeItemProvider != null) ellipsoidalCSTypeItemProvider.dispose();
		if (ellipsoidRefTypeItemProvider != null) ellipsoidRefTypeItemProvider.dispose();
		if (ellipsoidTypeItemProvider != null) ellipsoidTypeItemProvider.dispose();
		if (engineeringCRSRefTypeItemProvider != null) engineeringCRSRefTypeItemProvider.dispose();
		if (engineeringCRSTypeItemProvider != null) engineeringCRSTypeItemProvider.dispose();
		if (engineeringDatumRefTypeItemProvider != null) engineeringDatumRefTypeItemProvider.dispose();
		if (engineeringDatumTypeItemProvider != null) engineeringDatumTypeItemProvider.dispose();
		if (envelopeTypeItemProvider != null) envelopeTypeItemProvider.dispose();
		if (envelopeWithTimePeriodTypeItemProvider != null) envelopeWithTimePeriodTypeItemProvider.dispose();
		if (extentTypeItemProvider != null) extentTypeItemProvider.dispose();
		if (faceTypeItemProvider != null) faceTypeItemProvider.dispose();
		if (featureArrayPropertyTypeItemProvider != null) featureArrayPropertyTypeItemProvider.dispose();
		if (featureCollectionTypeItemProvider != null) featureCollectionTypeItemProvider.dispose();
		if (featurePropertyTypeItemProvider != null) featurePropertyTypeItemProvider.dispose();
		if (featureStylePropertyTypeItemProvider != null) featureStylePropertyTypeItemProvider.dispose();
		if (featureStyleTypeItemProvider != null) featureStyleTypeItemProvider.dispose();
		if (fileTypeItemProvider != null) fileTypeItemProvider.dispose();
		if (formulaTypeItemProvider != null) formulaTypeItemProvider.dispose();
		if (generalConversionRefTypeItemProvider != null) generalConversionRefTypeItemProvider.dispose();
		if (generalTransformationRefTypeItemProvider != null) generalTransformationRefTypeItemProvider.dispose();
		if (genericMetaDataTypeItemProvider != null) genericMetaDataTypeItemProvider.dispose();
		if (geocentricCRSRefTypeItemProvider != null) geocentricCRSRefTypeItemProvider.dispose();
		if (geocentricCRSTypeItemProvider != null) geocentricCRSTypeItemProvider.dispose();
		if (geodesicStringTypeItemProvider != null) geodesicStringTypeItemProvider.dispose();
		if (geodesicTypeItemProvider != null) geodesicTypeItemProvider.dispose();
		if (geodeticDatumRefTypeItemProvider != null) geodeticDatumRefTypeItemProvider.dispose();
		if (geodeticDatumTypeItemProvider != null) geodeticDatumTypeItemProvider.dispose();
		if (geographicCRSRefTypeItemProvider != null) geographicCRSRefTypeItemProvider.dispose();
		if (geographicCRSTypeItemProvider != null) geographicCRSTypeItemProvider.dispose();
		if (geometricComplexPropertyTypeItemProvider != null) geometricComplexPropertyTypeItemProvider.dispose();
		if (geometricComplexTypeItemProvider != null) geometricComplexTypeItemProvider.dispose();
		if (geometricPrimitivePropertyTypeItemProvider != null) geometricPrimitivePropertyTypeItemProvider.dispose();
		if (geometryArrayPropertyTypeItemProvider != null) geometryArrayPropertyTypeItemProvider.dispose();
		if (geometryPropertyTypeItemProvider != null) geometryPropertyTypeItemProvider.dispose();
		if (geometryStylePropertyTypeItemProvider != null) geometryStylePropertyTypeItemProvider.dispose();
		if (geometryStyleTypeItemProvider != null) geometryStyleTypeItemProvider.dispose();
		if (graphStylePropertyTypeItemProvider != null) graphStylePropertyTypeItemProvider.dispose();
		if (graphStyleTypeItemProvider != null) graphStyleTypeItemProvider.dispose();
		if (gridCoverageTypeItemProvider != null) gridCoverageTypeItemProvider.dispose();
		if (gridDomainTypeItemProvider != null) gridDomainTypeItemProvider.dispose();
		if (gridEnvelopeTypeItemProvider != null) gridEnvelopeTypeItemProvider.dispose();
		if (gridFunctionTypeItemProvider != null) gridFunctionTypeItemProvider.dispose();
		if (gridLengthTypeItemProvider != null) gridLengthTypeItemProvider.dispose();
		if (gridLimitsTypeItemProvider != null) gridLimitsTypeItemProvider.dispose();
		if (gridTypeItemProvider != null) gridTypeItemProvider.dispose();
		if (historyPropertyTypeItemProvider != null) historyPropertyTypeItemProvider.dispose();
		if (identifierTypeItemProvider != null) identifierTypeItemProvider.dispose();
		if (imageCRSRefTypeItemProvider != null) imageCRSRefTypeItemProvider.dispose();
		if (imageCRSTypeItemProvider != null) imageCRSTypeItemProvider.dispose();
		if (imageDatumRefTypeItemProvider != null) imageDatumRefTypeItemProvider.dispose();
		if (imageDatumTypeItemProvider != null) imageDatumTypeItemProvider.dispose();
		if (indexMapTypeItemProvider != null) indexMapTypeItemProvider.dispose();
		if (indirectEntryTypeItemProvider != null) indirectEntryTypeItemProvider.dispose();
		if (isolatedPropertyTypeItemProvider != null) isolatedPropertyTypeItemProvider.dispose();
		if (knotPropertyTypeItemProvider != null) knotPropertyTypeItemProvider.dispose();
		if (knotTypeItemProvider != null) knotTypeItemProvider.dispose();
		if (labelStylePropertyTypeItemProvider != null) labelStylePropertyTypeItemProvider.dispose();
		if (labelStyleTypeItemProvider != null) labelStyleTypeItemProvider.dispose();
		if (labelTypeItemProvider != null) labelTypeItemProvider.dispose();
		if (lengthTypeItemProvider != null) lengthTypeItemProvider.dispose();
		if (linearCSRefTypeItemProvider != null) linearCSRefTypeItemProvider.dispose();
		if (linearCSTypeItemProvider != null) linearCSTypeItemProvider.dispose();
		if (linearRingPropertyTypeItemProvider != null) linearRingPropertyTypeItemProvider.dispose();
		if (linearRingTypeItemProvider != null) linearRingTypeItemProvider.dispose();
		if (lineStringPropertyTypeItemProvider != null) lineStringPropertyTypeItemProvider.dispose();
		if (lineStringSegmentArrayPropertyTypeItemProvider != null) lineStringSegmentArrayPropertyTypeItemProvider.dispose();
		if (lineStringSegmentTypeItemProvider != null) lineStringSegmentTypeItemProvider.dispose();
		if (lineStringTypeItemProvider != null) lineStringTypeItemProvider.dispose();
		if (locationPropertyTypeItemProvider != null) locationPropertyTypeItemProvider.dispose();
		if (measureListTypeItemProvider != null) measureListTypeItemProvider.dispose();
		if (measureOrNullListTypeItemProvider != null) measureOrNullListTypeItemProvider.dispose();
		if (measureTypeItemProvider != null) measureTypeItemProvider.dispose();
		if (metaDataPropertyTypeItemProvider != null) metaDataPropertyTypeItemProvider.dispose();
		if (movingObjectStatusTypeItemProvider != null) movingObjectStatusTypeItemProvider.dispose();
		if (multiCurveCoverageTypeItemProvider != null) multiCurveCoverageTypeItemProvider.dispose();
		if (multiCurveDomainTypeItemProvider != null) multiCurveDomainTypeItemProvider.dispose();
		if (multiCurvePropertyTypeItemProvider != null) multiCurvePropertyTypeItemProvider.dispose();
		if (multiCurveTypeItemProvider != null) multiCurveTypeItemProvider.dispose();
		if (multiGeometryPropertyTypeItemProvider != null) multiGeometryPropertyTypeItemProvider.dispose();
		if (multiGeometryTypeItemProvider != null) multiGeometryTypeItemProvider.dispose();
		if (multiLineStringPropertyTypeItemProvider != null) multiLineStringPropertyTypeItemProvider.dispose();
		if (multiLineStringTypeItemProvider != null) multiLineStringTypeItemProvider.dispose();
		if (multiPointCoverageTypeItemProvider != null) multiPointCoverageTypeItemProvider.dispose();
		if (multiPointDomainTypeItemProvider != null) multiPointDomainTypeItemProvider.dispose();
		if (multiPointPropertyTypeItemProvider != null) multiPointPropertyTypeItemProvider.dispose();
		if (multiPointTypeItemProvider != null) multiPointTypeItemProvider.dispose();
		if (multiPolygonPropertyTypeItemProvider != null) multiPolygonPropertyTypeItemProvider.dispose();
		if (multiPolygonTypeItemProvider != null) multiPolygonTypeItemProvider.dispose();
		if (multiSolidCoverageTypeItemProvider != null) multiSolidCoverageTypeItemProvider.dispose();
		if (multiSolidDomainTypeItemProvider != null) multiSolidDomainTypeItemProvider.dispose();
		if (multiSolidPropertyTypeItemProvider != null) multiSolidPropertyTypeItemProvider.dispose();
		if (multiSolidTypeItemProvider != null) multiSolidTypeItemProvider.dispose();
		if (multiSurfaceCoverageTypeItemProvider != null) multiSurfaceCoverageTypeItemProvider.dispose();
		if (multiSurfaceDomainTypeItemProvider != null) multiSurfaceDomainTypeItemProvider.dispose();
		if (multiSurfacePropertyTypeItemProvider != null) multiSurfacePropertyTypeItemProvider.dispose();
		if (multiSurfaceTypeItemProvider != null) multiSurfaceTypeItemProvider.dispose();
		if (nodeTypeItemProvider != null) nodeTypeItemProvider.dispose();
		if (obliqueCartesianCSRefTypeItemProvider != null) obliqueCartesianCSRefTypeItemProvider.dispose();
		if (obliqueCartesianCSTypeItemProvider != null) obliqueCartesianCSTypeItemProvider.dispose();
		if (observationTypeItemProvider != null) observationTypeItemProvider.dispose();
		if (offsetCurveTypeItemProvider != null) offsetCurveTypeItemProvider.dispose();
		if (operationMethodRefTypeItemProvider != null) operationMethodRefTypeItemProvider.dispose();
		if (operationMethodTypeItemProvider != null) operationMethodTypeItemProvider.dispose();
		if (operationParameterGroupRefTypeItemProvider != null) operationParameterGroupRefTypeItemProvider.dispose();
		if (operationParameterGroupTypeItemProvider != null) operationParameterGroupTypeItemProvider.dispose();
		if (operationParameterRefTypeItemProvider != null) operationParameterRefTypeItemProvider.dispose();
		if (operationParameterTypeItemProvider != null) operationParameterTypeItemProvider.dispose();
		if (operationRefTypeItemProvider != null) operationRefTypeItemProvider.dispose();
		if (orientableCurveTypeItemProvider != null) orientableCurveTypeItemProvider.dispose();
		if (orientableSurfaceTypeItemProvider != null) orientableSurfaceTypeItemProvider.dispose();
		if (parameterValueGroupTypeItemProvider != null) parameterValueGroupTypeItemProvider.dispose();
		if (parameterValueTypeItemProvider != null) parameterValueTypeItemProvider.dispose();
		if (passThroughOperationRefTypeItemProvider != null) passThroughOperationRefTypeItemProvider.dispose();
		if (passThroughOperationTypeItemProvider != null) passThroughOperationTypeItemProvider.dispose();
		if (pixelInCellTypeItemProvider != null) pixelInCellTypeItemProvider.dispose();
		if (pointArrayPropertyTypeItemProvider != null) pointArrayPropertyTypeItemProvider.dispose();
		if (pointPropertyTypeItemProvider != null) pointPropertyTypeItemProvider.dispose();
		if (pointTypeItemProvider != null) pointTypeItemProvider.dispose();
		if (polarCSRefTypeItemProvider != null) polarCSRefTypeItemProvider.dispose();
		if (polarCSTypeItemProvider != null) polarCSTypeItemProvider.dispose();
		if (polygonPatchArrayPropertyTypeItemProvider != null) polygonPatchArrayPropertyTypeItemProvider.dispose();
		if (polygonPatchTypeItemProvider != null) polygonPatchTypeItemProvider.dispose();
		if (polygonPropertyTypeItemProvider != null) polygonPropertyTypeItemProvider.dispose();
		if (polygonTypeItemProvider != null) polygonTypeItemProvider.dispose();
		if (polyhedralSurfaceTypeItemProvider != null) polyhedralSurfaceTypeItemProvider.dispose();
		if (primeMeridianRefTypeItemProvider != null) primeMeridianRefTypeItemProvider.dispose();
		if (primeMeridianTypeItemProvider != null) primeMeridianTypeItemProvider.dispose();
		if (priorityLocationPropertyTypeItemProvider != null) priorityLocationPropertyTypeItemProvider.dispose();
		if (projectedCRSRefTypeItemProvider != null) projectedCRSRefTypeItemProvider.dispose();
		if (projectedCRSTypeItemProvider != null) projectedCRSTypeItemProvider.dispose();
		if (quantityExtentTypeItemProvider != null) quantityExtentTypeItemProvider.dispose();
		if (quantityPropertyTypeItemProvider != null) quantityPropertyTypeItemProvider.dispose();
		if (rangeParametersTypeItemProvider != null) rangeParametersTypeItemProvider.dispose();
		if (rangeSetTypeItemProvider != null) rangeSetTypeItemProvider.dispose();
		if (rectangleTypeItemProvider != null) rectangleTypeItemProvider.dispose();
		if (rectifiedGridCoverageTypeItemProvider != null) rectifiedGridCoverageTypeItemProvider.dispose();
		if (rectifiedGridDomainTypeItemProvider != null) rectifiedGridDomainTypeItemProvider.dispose();
		if (rectifiedGridTypeItemProvider != null) rectifiedGridTypeItemProvider.dispose();
		if (referenceSystemRefTypeItemProvider != null) referenceSystemRefTypeItemProvider.dispose();
		if (referenceTypeItemProvider != null) referenceTypeItemProvider.dispose();
		if (refLocationTypeItemProvider != null) refLocationTypeItemProvider.dispose();
		if (relatedTimeTypeItemProvider != null) relatedTimeTypeItemProvider.dispose();
		if (relativeInternalPositionalAccuracyTypeItemProvider != null) relativeInternalPositionalAccuracyTypeItemProvider.dispose();
		if (ringPropertyTypeItemProvider != null) ringPropertyTypeItemProvider.dispose();
		if (ringTypeItemProvider != null) ringTypeItemProvider.dispose();
		if (scalarValuePropertyTypeItemProvider != null) scalarValuePropertyTypeItemProvider.dispose();
		if (scaleTypeItemProvider != null) scaleTypeItemProvider.dispose();
		if (secondDefiningParameterTypeItemProvider != null) secondDefiningParameterTypeItemProvider.dispose();
		if (sequenceRuleTypeItemProvider != null) sequenceRuleTypeItemProvider.dispose();
		if (singleOperationRefTypeItemProvider != null) singleOperationRefTypeItemProvider.dispose();
		if (solidPropertyTypeItemProvider != null) solidPropertyTypeItemProvider.dispose();
		if (sphericalCSRefTypeItemProvider != null) sphericalCSRefTypeItemProvider.dispose();
		if (sphericalCSTypeItemProvider != null) sphericalCSTypeItemProvider.dispose();
		if (stringOrRefTypeItemProvider != null) stringOrRefTypeItemProvider.dispose();
		if (surfaceArrayPropertyTypeItemProvider != null) surfaceArrayPropertyTypeItemProvider.dispose();
		if (surfacePropertyTypeItemProvider != null) surfacePropertyTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (rowTypeItemProvider != null) rowTypeItemProvider.dispose();
		if (solidArrayPropertyTypeItemProvider != null) solidArrayPropertyTypeItemProvider.dispose();
		if (solidTypeItemProvider != null) solidTypeItemProvider.dispose();
		if (speedTypeItemProvider != null) speedTypeItemProvider.dispose();
		if (sphereTypeItemProvider != null) sphereTypeItemProvider.dispose();
		if (styleTypeItemProvider != null) styleTypeItemProvider.dispose();
		if (styleVariationTypeItemProvider != null) styleVariationTypeItemProvider.dispose();
		if (surfacePatchArrayPropertyTypeItemProvider != null) surfacePatchArrayPropertyTypeItemProvider.dispose();
		if (surfaceTypeItemProvider != null) surfaceTypeItemProvider.dispose();
		if (symbolTypeItemProvider != null) symbolTypeItemProvider.dispose();
		if (targetPropertyTypeItemProvider != null) targetPropertyTypeItemProvider.dispose();
		if (temporalCRSRefTypeItemProvider != null) temporalCRSRefTypeItemProvider.dispose();
		if (temporalCRSTypeItemProvider != null) temporalCRSTypeItemProvider.dispose();
		if (temporalCSRefTypeItemProvider != null) temporalCSRefTypeItemProvider.dispose();
		if (temporalCSTypeItemProvider != null) temporalCSTypeItemProvider.dispose();
		if (temporalDatumRefTypeItemProvider != null) temporalDatumRefTypeItemProvider.dispose();
		if (temporalDatumTypeItemProvider != null) temporalDatumTypeItemProvider.dispose();
		if (timeCalendarEraPropertyTypeItemProvider != null) timeCalendarEraPropertyTypeItemProvider.dispose();
		if (timeCalendarEraTypeItemProvider != null) timeCalendarEraTypeItemProvider.dispose();
		if (timeCalendarPropertyTypeItemProvider != null) timeCalendarPropertyTypeItemProvider.dispose();
		if (timeCalendarTypeItemProvider != null) timeCalendarTypeItemProvider.dispose();
		if (timeClockPropertyTypeItemProvider != null) timeClockPropertyTypeItemProvider.dispose();
		if (timeClockTypeItemProvider != null) timeClockTypeItemProvider.dispose();
		if (timeCoordinateSystemTypeItemProvider != null) timeCoordinateSystemTypeItemProvider.dispose();
		if (timeEdgePropertyTypeItemProvider != null) timeEdgePropertyTypeItemProvider.dispose();
		if (timeEdgeTypeItemProvider != null) timeEdgeTypeItemProvider.dispose();
		if (timeGeometricPrimitivePropertyTypeItemProvider != null) timeGeometricPrimitivePropertyTypeItemProvider.dispose();
		if (timeInstantPropertyTypeItemProvider != null) timeInstantPropertyTypeItemProvider.dispose();
		if (timeInstantTypeItemProvider != null) timeInstantTypeItemProvider.dispose();
		if (timeIntervalLengthTypeItemProvider != null) timeIntervalLengthTypeItemProvider.dispose();
		if (timeNodePropertyTypeItemProvider != null) timeNodePropertyTypeItemProvider.dispose();
		if (timeNodeTypeItemProvider != null) timeNodeTypeItemProvider.dispose();
		if (timeOrdinalEraPropertyTypeItemProvider != null) timeOrdinalEraPropertyTypeItemProvider.dispose();
		if (timeOrdinalEraTypeItemProvider != null) timeOrdinalEraTypeItemProvider.dispose();
		if (timeOrdinalReferenceSystemTypeItemProvider != null) timeOrdinalReferenceSystemTypeItemProvider.dispose();
		if (timePeriodPropertyTypeItemProvider != null) timePeriodPropertyTypeItemProvider.dispose();
		if (timePeriodTypeItemProvider != null) timePeriodTypeItemProvider.dispose();
		if (timePositionTypeItemProvider != null) timePositionTypeItemProvider.dispose();
		if (timePrimitivePropertyTypeItemProvider != null) timePrimitivePropertyTypeItemProvider.dispose();
		if (timeTopologyComplexPropertyTypeItemProvider != null) timeTopologyComplexPropertyTypeItemProvider.dispose();
		if (timeTopologyComplexTypeItemProvider != null) timeTopologyComplexTypeItemProvider.dispose();
		if (timeTopologyPrimitivePropertyTypeItemProvider != null) timeTopologyPrimitivePropertyTypeItemProvider.dispose();
		if (timeTypeItemProvider != null) timeTypeItemProvider.dispose();
		if (tinTypeItemProvider != null) tinTypeItemProvider.dispose();
		if (topoComplexMemberTypeItemProvider != null) topoComplexMemberTypeItemProvider.dispose();
		if (topoComplexTypeItemProvider != null) topoComplexTypeItemProvider.dispose();
		if (topoCurvePropertyTypeItemProvider != null) topoCurvePropertyTypeItemProvider.dispose();
		if (topoCurveTypeItemProvider != null) topoCurveTypeItemProvider.dispose();
		if (topologyStylePropertyTypeItemProvider != null) topologyStylePropertyTypeItemProvider.dispose();
		if (topologyStyleTypeItemProvider != null) topologyStyleTypeItemProvider.dispose();
		if (topoPointPropertyTypeItemProvider != null) topoPointPropertyTypeItemProvider.dispose();
		if (topoPointTypeItemProvider != null) topoPointTypeItemProvider.dispose();
		if (topoPrimitiveArrayAssociationTypeItemProvider != null) topoPrimitiveArrayAssociationTypeItemProvider.dispose();
		if (topoPrimitiveMemberTypeItemProvider != null) topoPrimitiveMemberTypeItemProvider.dispose();
		if (topoSolidTypeItemProvider != null) topoSolidTypeItemProvider.dispose();
		if (topoSurfacePropertyTypeItemProvider != null) topoSurfacePropertyTypeItemProvider.dispose();
		if (topoSurfaceTypeItemProvider != null) topoSurfaceTypeItemProvider.dispose();
		if (topoVolumePropertyTypeItemProvider != null) topoVolumePropertyTypeItemProvider.dispose();
		if (topoVolumeTypeItemProvider != null) topoVolumeTypeItemProvider.dispose();
		if (trackTypeItemProvider != null) trackTypeItemProvider.dispose();
		if (transformationRefTypeItemProvider != null) transformationRefTypeItemProvider.dispose();
		if (transformationTypeItemProvider != null) transformationTypeItemProvider.dispose();
		if (trianglePatchArrayPropertyTypeItemProvider != null) trianglePatchArrayPropertyTypeItemProvider.dispose();
		if (triangleTypeItemProvider != null) triangleTypeItemProvider.dispose();
		if (triangulatedSurfaceTypeItemProvider != null) triangulatedSurfaceTypeItemProvider.dispose();
		if (unitDefinitionTypeItemProvider != null) unitDefinitionTypeItemProvider.dispose();
		if (unitOfMeasureTypeItemProvider != null) unitOfMeasureTypeItemProvider.dispose();
		if (userDefinedCSRefTypeItemProvider != null) userDefinedCSRefTypeItemProvider.dispose();
		if (userDefinedCSTypeItemProvider != null) userDefinedCSTypeItemProvider.dispose();
		if (valueArrayPropertyTypeItemProvider != null) valueArrayPropertyTypeItemProvider.dispose();
		if (valueArrayTypeItemProvider != null) valueArrayTypeItemProvider.dispose();
		if (valuePropertyTypeItemProvider != null) valuePropertyTypeItemProvider.dispose();
		if (vectorTypeItemProvider != null) vectorTypeItemProvider.dispose();
		if (verticalCRSRefTypeItemProvider != null) verticalCRSRefTypeItemProvider.dispose();
		if (verticalCRSTypeItemProvider != null) verticalCRSTypeItemProvider.dispose();
		if (verticalCSRefTypeItemProvider != null) verticalCSRefTypeItemProvider.dispose();
		if (verticalCSTypeItemProvider != null) verticalCSTypeItemProvider.dispose();
		if (verticalDatumRefTypeItemProvider != null) verticalDatumRefTypeItemProvider.dispose();
		if (verticalDatumTypeItemProvider != null) verticalDatumTypeItemProvider.dispose();
		if (verticalDatumTypeTypeItemProvider != null) verticalDatumTypeTypeItemProvider.dispose();
		if (volumeTypeItemProvider != null) volumeTypeItemProvider.dispose();
	}

}
